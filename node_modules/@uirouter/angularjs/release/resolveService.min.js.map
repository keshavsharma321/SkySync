{
  "version": 3,
  "file": "resolveService.min.js",
  "sources": [
    "@uirouter\\angularjs\\src\\legacy\\resolveService.ts"
  ],
  "sourcesContent": [
    "/** @publicapi @module ng1 */ /** */\r\nimport { StateObject, PathNode, ResolveContext, Obj, mapObj, resolvablesBuilder } from '@uirouter/core';\r\nimport * as angular from 'angular';\r\n\r\n/**\r\n * Implementation of the legacy `$resolve` service for angular 1.\r\n */\r\nconst $resolve = {\r\n  /**\r\n   * Asynchronously injects a resolve block.\r\n   *\r\n   * This emulates most of the behavior of the ui-router 0.2.x $resolve.resolve() service API.\r\n   *\r\n   * ### Not bundled by default\r\n   *\r\n   * This API is no longer not part of the standard `@uirouter/angularjs` bundle.\r\n   * For users of the prebuilt bundles, add the `release/resolveService.min.js` UMD bundle.\r\n   * For bundlers (webpack, browserify, etc), add `@uirouter/angularjs/lib/legacy/resolveService`.\r\n   *\r\n   * ---\r\n   *\r\n   * Given an object `invocables`, where keys are strings and values are injectable functions,\r\n   * injects each function, and waits for the resulting promise to resolve.\r\n   * When all resulting promises are resolved, returns the results as an object.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * let invocables = {\r\n   *   foo: [ '$http', ($http) =>\r\n   *            $http.get('/api/foo').then(resp => resp.data) ],\r\n   *   bar: [ 'foo', '$http', (foo, $http) =>\r\n   *            $http.get('/api/bar/' + foo.barId).then(resp => resp.data) ]\r\n   * }\r\n   * $resolve.resolve(invocables)\r\n   *     .then(results => console.log(results.foo, results.bar))\r\n   * // Logs foo and bar:\r\n   * // { id: 123, barId: 456, fooData: 'foo data' }\r\n   * // { id: 456, barData: 'bar data' }\r\n   * ```\r\n   *\r\n   * @param invocables an object which looks like an [[StateDeclaration.resolve]] object; keys are resolve names and values are injectable functions\r\n   * @param locals key/value pre-resolved data (locals)\r\n   * @param parent a promise for a \"parent resolve\"\r\n   */\r\n  resolve: (invocables: { [key: string]: Function }, locals = {}, parent?: Promise<any>) => {\r\n    const parentNode = new PathNode(new StateObject(<any>{ params: {}, resolvables: [] }));\r\n    const node = new PathNode(new StateObject(<any>{ params: {}, resolvables: [] }));\r\n    const context = new ResolveContext([parentNode, node]);\r\n\r\n    context.addResolvables(resolvablesBuilder(<any>{ resolve: invocables }), node.state);\r\n\r\n    const resolveData = (parentLocals: Obj) => {\r\n      const rewrap = (_locals: Obj) => resolvablesBuilder(<any>{ resolve: mapObj(_locals, (local) => () => local) });\r\n      context.addResolvables(rewrap(parentLocals), parentNode.state);\r\n      context.addResolvables(rewrap(locals), node.state);\r\n\r\n      const tuples2ObjR = (acc: Obj, tuple: { token: any; value: any }) => {\r\n        acc[tuple.token] = tuple.value;\r\n        return acc;\r\n      };\r\n      return context.resolvePath().then((results) => results.reduce(tuples2ObjR, {}));\r\n    };\r\n\r\n    return parent ? parent.then(resolveData) : resolveData({});\r\n  },\r\n};\r\n\r\n/** @hidden */\r\nexport const resolveFactory = () => $resolve;\r\n\r\n// The old $resolve service\r\nangular.module('ui.router').factory('$resolve', <any>resolveFactory);\r\n"
  ],
  "names": [
    "$resolve",
    "resolve",
    "invocables",
    "locals",
    "parent",
    "parentNode",
    "PathNode",
    "StateObject",
    "params",
    "resolvables",
    "node",
    "context",
    "ResolveContext",
    "addResolvables",
    "resolvablesBuilder",
    "state",
    "resolveData",
    "parentLocals",
    "rewrap",
    "_locals",
    "mapObj",
    "local",
    "tuples2ObjR",
    "acc",
    "tuple",
    "token",
    "value",
    "resolvePath",
    "then",
    "results",
    "reduce",
    "resolveFactory",
    "factory"
  ],
  "mappings": ";;;;;;8UAOA,IAAMA,EAAW,CAqCfC,QAAS,SAACC,EAAyCC,EAAaC,gBAAbD,MACjD,IAAME,EAAa,IAAIC,WAAS,IAAIC,cAAiB,CAAEC,OAAQ,GAAIC,YAAa,MAC1EC,EAAO,IAAIJ,WAAS,IAAIC,cAAiB,CAAEC,OAAQ,GAAIC,YAAa,MACpEE,EAAU,IAAIC,iBAAe,CAACP,EAAYK,IAEhDC,EAAQE,eAAeC,qBAAwB,CAAEb,QAASC,IAAeQ,EAAKK,OAE9E,IAAMC,EAAc,SAACC,GACnB,IAAMC,EAAS,SAACC,GAAiB,OAAAL,qBAAwB,CAAEb,QAASmB,SAAOD,GAAS,SAACE,GAAU,OAAA,WAAM,OAAAA,SACrGV,EAAQE,eAAeK,EAAOD,GAAeZ,EAAWU,OACxDJ,EAAQE,eAAeK,EAAOf,GAASO,EAAKK,OAE5C,IAAMO,EAAc,SAACC,EAAUC,GAE7B,OADAD,EAAIC,EAAMC,OAASD,EAAME,MAClBH,GAET,OAAOZ,EAAQgB,cAAcC,MAAK,SAACC,GAAY,OAAAA,EAAQC,OAAOR,EAAa,QAG7E,OAAOlB,EAASA,EAAOwB,KAAKZ,GAAeA,EAAY,MAK9Ce,EAAiB,WAAM,OAAA/B,YAGrB,aAAagC,QAAQ,WAAiBD"
}