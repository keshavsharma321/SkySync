{
  "version": 3,
  "file": "ui-router-angularjs.js",
  "sources": [
    "@uirouter\\angularjs\\src\\angular.ts",
    "@uirouter\\angularjs\\src\\statebuilders\\views.ts",
    "@uirouter\\angularjs\\src\\templateFactory.ts",
    "@uirouter\\angularjs\\src\\stateProvider.ts",
    "@uirouter\\angularjs\\src\\statebuilders\\onEnterExitRetain.ts",
    "@uirouter\\angularjs\\src\\locationServices.ts",
    "@uirouter\\angularjs\\src\\urlRouterProvider.ts",
    "@uirouter\\angularjs\\src\\services.ts",
    "@uirouter\\angularjs\\src\\directives\\stateDirectives.ts",
    "@uirouter\\angularjs\\src\\stateFilters.ts",
    "@uirouter\\angularjs\\src\\directives\\viewDirective.ts",
    "@uirouter\\angularjs\\src\\viewScroll.ts",
    "@uirouter\\angularjs\\src\\index.ts"
  ],
  "sourcesContent": [
    "/** @publicapi @module ng1 */ /** */\r\nimport * as ng_from_import from 'angular';\r\n/** @hidden */ declare let angular;\r\n/** @hidden */ const ng_from_global = angular;\r\n/** @hidden */ export const ng = ng_from_import && ng_from_import.module ? ng_from_import : ng_from_global;\r\n",
    "/** @publicapi @module ng1 */ /** */\r\nimport {\r\n  StateObject,\r\n  pick,\r\n  forEach,\r\n  tail,\r\n  extend,\r\n  isArray,\r\n  isInjectable,\r\n  isDefined,\r\n  isString,\r\n  services,\r\n  trace,\r\n  ViewConfig,\r\n  ViewService,\r\n  ViewConfigFactory,\r\n  PathNode,\r\n  ResolveContext,\r\n  Resolvable,\r\n  IInjectable,\r\n} from '@uirouter/core';\r\nimport { Ng1ViewDeclaration } from '../interface';\r\nimport { TemplateFactory } from '../templateFactory';\r\n\r\n/** @internalapi */\r\nexport function getNg1ViewConfigFactory(): ViewConfigFactory {\r\n  let templateFactory: TemplateFactory = null;\r\n  return (path, view) => {\r\n    templateFactory = templateFactory || services.$injector.get('$templateFactory');\r\n    return [new Ng1ViewConfig(path, view, templateFactory)];\r\n  };\r\n}\r\n\r\n/** @internalapi */\r\nconst hasAnyKey = (keys, obj) => keys.reduce((acc, key) => acc || isDefined(obj[key]), false);\r\n\r\n/**\r\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\r\n *\r\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\r\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\r\n *\r\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\r\n * and applies the state-level configuration to a view named `$default`.\r\n *\r\n * @internalapi\r\n */\r\nexport function ng1ViewsBuilder(state: StateObject) {\r\n  // Do not process root state\r\n  if (!state.parent) return {};\r\n\r\n  const tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'],\r\n    ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'],\r\n    compKeys = ['component', 'bindings', 'componentProvider'],\r\n    nonCompKeys = tplKeys.concat(ctrlKeys),\r\n    allViewKeys = compKeys.concat(nonCompKeys);\r\n\r\n  // Do not allow a state to have both state-level props and also a `views: {}` property.\r\n  // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\r\n  // However, the `$default` approach should not be mixed with a separate `views: ` block.\r\n  if (isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\r\n    throw new Error(\r\n      `State '${state.name}' has a 'views' object. ` +\r\n        `It cannot also have \"view properties\" at the state level.  ` +\r\n        `Move the following properties into a view (in the 'views' object): ` +\r\n        ` ${allViewKeys.filter((key) => isDefined(state[key])).join(', ')}`\r\n    );\r\n  }\r\n\r\n  const views: { [key: string]: Ng1ViewDeclaration } = {},\r\n    viewsObject = state.views || { $default: pick(state, allViewKeys) };\r\n\r\n  forEach(viewsObject, function (config: Ng1ViewDeclaration, name: string) {\r\n    // Account for views: { \"\": { template... } }\r\n    name = name || '$default';\r\n    // Account for views: { header: \"headerComponent\" }\r\n    if (isString(config)) config = { component: <string>config };\r\n\r\n    // Make a shallow copy of the config object\r\n    config = extend({}, config);\r\n\r\n    // Do not allow a view to mix props for component-style view with props for template/controller-style view\r\n    if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\r\n      throw new Error(\r\n        `Cannot combine: ${compKeys.join('|')} with: ${nonCompKeys.join('|')} in stateview: '${name}@${state.name}'`\r\n      );\r\n    }\r\n\r\n    config.resolveAs = config.resolveAs || '$resolve';\r\n    config.$type = 'ng1';\r\n    config.$context = state;\r\n    config.$name = name;\r\n\r\n    const normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\r\n    config.$uiViewName = normalized.uiViewName;\r\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\r\n\r\n    views[name] = config;\r\n  });\r\n  return views;\r\n}\r\n\r\n/** @hidden */\r\nlet id = 0;\r\n\r\n/** @internalapi */\r\nexport class Ng1ViewConfig implements ViewConfig {\r\n  $id = id++;\r\n  loaded = false;\r\n  controller: Function; // actually IInjectable|string\r\n  template: string;\r\n  component: string;\r\n  locals: any; // TODO: delete me\r\n\r\n  constructor(public path: PathNode[], public viewDecl: Ng1ViewDeclaration, public factory: TemplateFactory) {}\r\n\r\n  load() {\r\n    const $q = services.$q;\r\n    const context = new ResolveContext(this.path);\r\n    const params = this.path.reduce((acc, node) => extend(acc, node.paramValues), {});\r\n\r\n    const promises: any = {\r\n      template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\r\n      controller: $q.when(this.getController(context)),\r\n    };\r\n\r\n    return $q.all(promises).then((results) => {\r\n      trace.traceViewServiceEvent('Loaded', this);\r\n      this.controller = results.controller;\r\n      extend(this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\r\n      return this;\r\n    });\r\n  }\r\n\r\n  getTemplate = (uiView, context: ResolveContext) =>\r\n    this.component\r\n      ? this.factory.makeComponentTemplate(uiView, context, this.component, this.viewDecl.bindings)\r\n      : this.template;\r\n\r\n  /**\r\n   * Gets the controller for a view configuration.\r\n   *\r\n   * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\r\n   */\r\n  getController(context: ResolveContext): IInjectable | string | Promise<IInjectable | string> {\r\n    const provider = this.viewDecl.controllerProvider;\r\n    if (!isInjectable(provider)) return this.viewDecl.controller;\r\n    const deps = services.$injector.annotate(provider);\r\n    const providerFn = isArray(provider) ? tail(<any>provider) : provider;\r\n    const resolvable = new Resolvable('', <any>providerFn, deps);\r\n    return resolvable.get(context);\r\n  }\r\n}\r\n",
    "/** @publicapi @module view */ /** */\r\nimport { ng as angular } from './angular';\r\nimport { IAugmentedJQuery } from 'angular';\r\nimport {\r\n  isArray,\r\n  isDefined,\r\n  isFunction,\r\n  isObject,\r\n  services,\r\n  Obj,\r\n  IInjectable,\r\n  tail,\r\n  kebobString,\r\n  unnestR,\r\n  ResolveContext,\r\n  Resolvable,\r\n  RawParams,\r\n} from '@uirouter/core';\r\nimport { Ng1ViewDeclaration, TemplateFactoryProvider } from './interface';\r\n\r\n/**\r\n * Service which manages loading of templates from a ViewConfig.\r\n */\r\nexport class TemplateFactory implements TemplateFactoryProvider {\r\n  /** @hidden */ private _useHttp = angular.version.minor < 3;\r\n  /** @hidden */ private $templateRequest;\r\n  /** @hidden */ private $templateCache;\r\n  /** @hidden */ private $http;\r\n\r\n  /** @hidden */ $get = [\r\n    '$http',\r\n    '$templateCache',\r\n    '$injector',\r\n    ($http, $templateCache, $injector) => {\r\n      this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\r\n      this.$http = $http;\r\n      this.$templateCache = $templateCache;\r\n      return this;\r\n    },\r\n  ];\r\n\r\n  /** @hidden */\r\n  useHttpService(value: boolean) {\r\n    this._useHttp = value;\r\n  }\r\n\r\n  /**\r\n   * Creates a template from a configuration object.\r\n   *\r\n   * @param config Configuration object for which to load a template.\r\n   * The following properties are search in the specified order, and the first one\r\n   * that is defined is used to create the template:\r\n   *\r\n   * @param params  Parameters to pass to the template function.\r\n   * @param context The resolve context associated with the template's view\r\n   *\r\n   * @return {string|object}  The template html as a string, or a promise for\r\n   * that string,or `null` if no template is configured.\r\n   */\r\n  fromConfig(\r\n    config: Ng1ViewDeclaration,\r\n    params: any,\r\n    context: ResolveContext\r\n  ): Promise<{ template?: string; component?: string }> {\r\n    const defaultTemplate = '<ui-view></ui-view>';\r\n\r\n    const asTemplate = (result) => services.$q.when(result).then((str) => ({ template: str }));\r\n    const asComponent = (result) => services.$q.when(result).then((str) => ({ component: str }));\r\n\r\n    return isDefined(config.template)\r\n      ? asTemplate(this.fromString(config.template, params))\r\n      : isDefined(config.templateUrl)\r\n      ? asTemplate(this.fromUrl(config.templateUrl, params))\r\n      : isDefined(config.templateProvider)\r\n      ? asTemplate(this.fromProvider(config.templateProvider, params, context))\r\n      : isDefined(config.component)\r\n      ? asComponent(config.component)\r\n      : isDefined(config.componentProvider)\r\n      ? asComponent(this.fromComponentProvider(config.componentProvider, params, context))\r\n      : asTemplate(defaultTemplate);\r\n  }\r\n\r\n  /**\r\n   * Creates a template from a string or a function returning a string.\r\n   *\r\n   * @param template html template as a string or function that returns an html template as a string.\r\n   * @param params Parameters to pass to the template function.\r\n   *\r\n   * @return {string|object} The template html as a string, or a promise for that\r\n   * string.\r\n   */\r\n  fromString(template: string | Function, params?: RawParams) {\r\n    return isFunction(template) ? (<any>template)(params) : template;\r\n  }\r\n\r\n  /**\r\n   * Loads a template from the a URL via `$http` and `$templateCache`.\r\n   *\r\n   * @param {string|Function} url url of the template to load, or a function\r\n   * that returns a url.\r\n   * @param {Object} params Parameters to pass to the url function.\r\n   * @return {string|Promise.<string>} The template html as a string, or a promise\r\n   * for that string.\r\n   */\r\n  fromUrl(url: string | Function, params: any) {\r\n    if (isFunction(url)) url = (<any>url)(params);\r\n    if (url == null) return null;\r\n\r\n    if (this._useHttp) {\r\n      return this.$http\r\n        .get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\r\n        .then(function (response) {\r\n          return response.data;\r\n        });\r\n    }\r\n\r\n    return this.$templateRequest(url);\r\n  }\r\n\r\n  /**\r\n   * Creates a template by invoking an injectable provider function.\r\n   *\r\n   * @param provider Function to invoke via `locals`\r\n   * @param {Function} injectFn a function used to invoke the template provider\r\n   * @return {string|Promise.<string>} The template html as a string, or a promise\r\n   * for that string.\r\n   */\r\n  fromProvider(provider: IInjectable, params: any, context: ResolveContext) {\r\n    const deps = services.$injector.annotate(provider);\r\n    const providerFn = isArray(provider) ? tail(<any[]>provider) : provider;\r\n    const resolvable = new Resolvable('', <Function>providerFn, deps);\r\n    return resolvable.get(context);\r\n  }\r\n\r\n  /**\r\n   * Creates a component's template by invoking an injectable provider function.\r\n   *\r\n   * @param provider Function to invoke via `locals`\r\n   * @param {Function} injectFn a function used to invoke the template provider\r\n   * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\r\n   */\r\n  fromComponentProvider(provider: IInjectable, params: any, context: ResolveContext) {\r\n    const deps = services.$injector.annotate(provider);\r\n    const providerFn = isArray(provider) ? tail(<any[]>provider) : provider;\r\n    const resolvable = new Resolvable('', <Function>providerFn, deps);\r\n    return resolvable.get(context);\r\n  }\r\n\r\n  /**\r\n   * Creates a template from a component's name\r\n   *\r\n   * This implements route-to-component.\r\n   * It works by retrieving the component (directive) metadata from the injector.\r\n   * It analyses the component's bindings, then constructs a template that instantiates the component.\r\n   * The template wires input and output bindings to resolves or from the parent component.\r\n   *\r\n   * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\r\n   * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\r\n   * @param component {string} Component's name in camel case.\r\n   * @param bindings An object defining the component's bindings: {foo: '<'}\r\n   * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\r\n   */\r\n  makeComponentTemplate(uiView: IAugmentedJQuery, context: ResolveContext, component: string, bindings?: any) {\r\n    bindings = bindings || {};\r\n\r\n    // Bind once prefix\r\n    const prefix = angular.version.minor >= 3 ? '::' : '';\r\n    // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\r\n    const kebob = (camelCase: string) => {\r\n      const kebobed = kebobString(camelCase);\r\n      return /^(x|data)-/.exec(kebobed) ? `x-${kebobed}` : kebobed;\r\n    };\r\n\r\n    const attributeTpl = (input: BindingTuple) => {\r\n      const { name, type } = input;\r\n      const attrName = kebob(name);\r\n      // If the ui-view has an attribute which matches a binding on the routed component\r\n      // then pass that attribute through to the routed component template.\r\n      // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\r\n      if (uiView.attr(attrName) && !bindings[name]) return `${attrName}='${uiView.attr(attrName)}'`;\r\n\r\n      const resolveName = bindings[name] || name;\r\n      // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\r\n      // some-attr=\"{{ ::$resolve.someResolveName }}\"\r\n      if (type === '@') return `${attrName}='{{${prefix}$resolve.${resolveName}}}'`;\r\n\r\n      // Wire \"&\" callbacks to resolves that return a callback function\r\n      // Get the result of the resolve (should be a function) and annotate it to get its arguments.\r\n      // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\r\n      if (type === '&') {\r\n        const res = context.getResolvable(resolveName);\r\n        const fn = res && res.data;\r\n        const args = (fn && services.$injector.annotate(fn)) || [];\r\n        // account for array style injection, i.e., ['foo', function(foo) {}]\r\n        const arrayIdxStr = isArray(fn) ? `[${fn.length - 1}]` : '';\r\n        return `${attrName}='$resolve.${resolveName}${arrayIdxStr}(${args.join(',')})'`;\r\n      }\r\n\r\n      // some-attr=\"::$resolve.someResolveName\"\r\n      return `${attrName}='${prefix}$resolve.${resolveName}'`;\r\n    };\r\n\r\n    const attrs = getComponentBindings(component).map(attributeTpl).join(' ');\r\n    const kebobName = kebob(component);\r\n    return `<${kebobName} ${attrs}></${kebobName}>`;\r\n  }\r\n}\r\n\r\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\r\nfunction getComponentBindings(name: string) {\r\n  const cmpDefs = <any[]>services.$injector.get(name + 'Directive'); // could be multiple\r\n  if (!cmpDefs || !cmpDefs.length) throw new Error(`Unable to find component named '${name}'`);\r\n  return cmpDefs.map(getBindings).reduce(unnestR, []);\r\n}\r\n\r\n// Given a directive definition, find its object input attributes\r\n// Use different properties, depending on the type of directive (component, bindToController, normal)\r\nconst getBindings = (def: any) => {\r\n  if (isObject(def.bindToController)) return scopeBindings(def.bindToController);\r\n  return scopeBindings(def.scope);\r\n};\r\n\r\ninterface BindingTuple {\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\r\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\r\nconst scopeBindings = (bindingsObj: Obj) =>\r\n  Object.keys(bindingsObj || {})\r\n    // [ 'input', [ '=foo', '=', 'foo' ] ]\r\n    .map((key) => [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])])\r\n    // skip malformed values\r\n    .filter((tuple) => isDefined(tuple) && isArray(tuple[1]))\r\n    // { name: ('foo' || 'input'), type: '=' }\r\n    .map((tuple) => ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] } as BindingTuple));\r\n",
    "/** @publicapi @module ng1 */ /** */\r\nimport {\r\n  val,\r\n  isObject,\r\n  createProxyFunctions,\r\n  BuilderFunction,\r\n  StateRegistry,\r\n  StateService,\r\n  OnInvalidCallback,\r\n} from '@uirouter/core';\r\nimport { Ng1StateDeclaration } from './interface';\r\n\r\n/**\r\n * The Angular 1 `StateProvider`\r\n *\r\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\r\n * on state.\r\n *\r\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\r\n * navigation. A state describes (via the controller / template / view properties) what\r\n * the UI looks like and does at that place.\r\n *\r\n * States often have things in common, and the primary way of factoring out these\r\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\r\n * nested states.\r\n *\r\n * The `$stateProvider` provides interfaces to declare these states for your app.\r\n */\r\nexport class StateProvider {\r\n  constructor(private stateRegistry: StateRegistry, private stateService: StateService) {\r\n    createProxyFunctions(val(StateProvider.prototype), this, val(this));\r\n  }\r\n\r\n  /**\r\n   * Decorates states when they are registered\r\n   *\r\n   * Allows you to extend (carefully) or override (at your own peril) the\r\n   * `stateBuilder` object used internally by [[StateRegistry]].\r\n   * This can be used to add custom functionality to ui-router,\r\n   * for example inferring templateUrl based on the state name.\r\n   *\r\n   * When passing only a name, it returns the current (original or decorated) builder\r\n   * function that matches `name`.\r\n   *\r\n   * The builder functions that can be decorated are listed below. Though not all\r\n   * necessarily have a good use case for decoration, that is up to you to decide.\r\n   *\r\n   * In addition, users can attach custom decorators, which will generate new\r\n   * properties within the state's internal definition. There is currently no clear\r\n   * use-case for this beyond accessing internal states (i.e. $state.$current),\r\n   * however, expect this to become increasingly relevant as we introduce additional\r\n   * meta-programming features.\r\n   *\r\n   * **Warning**: Decorators should not be interdependent because the order of\r\n   * execution of the builder functions in non-deterministic. Builder functions\r\n   * should only be dependent on the state definition object and super function.\r\n   *\r\n   *\r\n   * Existing builder functions and current return values:\r\n   *\r\n   * - **parent** `{object}` - returns the parent state object.\r\n   * - **data** `{object}` - returns state data, including any inherited data that is not\r\n   *   overridden by own values (if any).\r\n   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\r\n   *   or `null`.\r\n   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\r\n   *   navigable).\r\n   * - **params** `{object}` - returns an array of state params that are ensured to\r\n   *   be a super-set of parent's params.\r\n   * - **views** `{object}` - returns a views object where each key is an absolute view\r\n   *   name (i.e. \"viewName@stateName\") and each value is the config object\r\n   *   (template, controller) for the view. Even when you don't use the views object\r\n   *   explicitly on a state config, one is still created for you internally.\r\n   *   So by decorating this builder function you have access to decorating template\r\n   *   and controller properties.\r\n   * - **ownParams** `{object}` - returns an array of params that belong to the state,\r\n   *   not including any params defined by ancestor states.\r\n   * - **path** `{string}` - returns the full path from the root down to this state.\r\n   *   Needed for state activation.\r\n   * - **includes** `{object}` - returns an object that includes every state that\r\n   *   would pass a `$state.includes()` test.\r\n   *\r\n   * #### Example:\r\n   * Override the internal 'views' builder with a function that takes the state\r\n   * definition, and a reference to the internal function being overridden:\r\n   * ```js\r\n   * $stateProvider.decorator('views', function (state, parent) {\r\n   *   let result = {},\r\n   *       views = parent(state);\r\n   *\r\n   *   angular.forEach(views, function (config, name) {\r\n   *     let autoName = (state.name + '.' + name).replace('.', '/');\r\n   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\r\n   *     result[name] = config;\r\n   *   });\r\n   *   return result;\r\n   * });\r\n   *\r\n   * $stateProvider.state('home', {\r\n   *   views: {\r\n   *     'contact.list': { controller: 'ListController' },\r\n   *     'contact.item': { controller: 'ItemController' }\r\n   *   }\r\n   * });\r\n   * ```\r\n   *\r\n   *\r\n   * ```js\r\n   * // Auto-populates list and item views with /partials/home/contact/list.html,\r\n   * // and /partials/home/contact/item.html, respectively.\r\n   * $state.go('home');\r\n   * ```\r\n   *\r\n   * @param {string} name The name of the builder function to decorate.\r\n   * @param {object} func A function that is responsible for decorating the original\r\n   * builder function. The function receives two parameters:\r\n   *\r\n   *   - `{object}` - state - The state config object.\r\n   *   - `{object}` - super - The original builder function.\r\n   *\r\n   * @return {object} $stateProvider - $stateProvider instance\r\n   */\r\n  decorator(name: string, func: BuilderFunction) {\r\n    return this.stateRegistry.decorator(name, func) || this;\r\n  }\r\n\r\n  /**\r\n   * Registers a state\r\n   *\r\n   * ### This is a passthrough to [[StateRegistry.register]].\r\n   *\r\n   * Registers a state configuration under a given state name.\r\n   * The stateConfig object has the following acceptable properties.\r\n   *\r\n   * <a id='template'></a>\r\n   *\r\n   * - **`template`** - {string|function=} - html template as a string or a function that returns\r\n   *   an html template as a string which should be used by the uiView directives. This property\r\n   *   takes precedence over templateUrl.\r\n   *\r\n   *   If `template` is a function, it will be called with the following parameters:\r\n   *\r\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\r\n   *     applying the current state\r\n   *\r\n   * <a id='templateUrl'></a>\r\n   *\r\n   * - **`templateUrl`** - {string|function=} - path or function that returns a path to an html\r\n   *   template that should be used by uiView.\r\n   *\r\n   *   If `templateUrl` is a function, it will be called with the following parameters:\r\n   *\r\n   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\r\n   *     applying the current state\r\n   *\r\n   * <a id='templateProvider'></a>\r\n   *\r\n   * - **`templateProvider`** - {function=} - Provider function that returns HTML content\r\n   *   string.\r\n   *\r\n   * <a id='controller'></a>\r\n   *\r\n   * - **`controller`** - {string|function=} -  Controller fn that should be associated with newly\r\n   *   related scope or the name of a registered controller if passed as a string.\r\n   *\r\n   * <a id='controllerProvider'></a>\r\n   *\r\n   * - **`controllerProvider`** - {function=} - Injectable provider function that returns\r\n   *   the actual controller or string.\r\n   *\r\n   * <a id='controllerAs'></a>\r\n   *\r\n   * - **`controllerAs`** – {string=} – A controller alias name. If present the controller will be\r\n   *   published to scope under the controllerAs name.\r\n   *\r\n   * <a id='resolve'></a>\r\n   *\r\n   * - **`resolve`** - {object.&lt;string, function&gt;=} - An optional map of dependencies which\r\n   *   should be injected into the controller. If any of these dependencies are promises,\r\n   *   the router will wait for them all to be resolved or one to be rejected before the\r\n   *   controller is instantiated. If all the promises are resolved successfully, the values\r\n   *   of the resolved promises are injected and $stateChangeSuccess event is fired. If any\r\n   *   of the promises are rejected the $stateChangeError event is fired. The map object is:\r\n   *\r\n   *   - key - {string}: name of dependency to be injected into controller\r\n   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function,\r\n   *     it is injected and return value it treated as dependency. If result is a promise, it is\r\n   *     resolved before its value is injected into controller.\r\n   *\r\n   * <a id='url'></a>\r\n   *\r\n   * - **`url`** - {string=} - A url with optional parameters. When a state is navigated or\r\n   *   transitioned to, the `$stateParams` service will be populated with any\r\n   *   parameters that were passed.\r\n   *\r\n   * <a id='params'></a>\r\n   *\r\n   * - **`params`** - {object=} - An array of parameter names or regular expressions. Only\r\n   *   use this within a state if you are not using url. Otherwise you can specify your\r\n   *   parameters within the url. When a state is navigated or transitioned to, the\r\n   *   $stateParams service will be populated with any parameters that were passed.\r\n   *\r\n   * <a id='views'></a>\r\n   *\r\n   * - **`views`** - {object=} - Use the views property to set up multiple views or to target views\r\n   *   manually/explicitly.\r\n   *\r\n   * <a id='abstract'></a>\r\n   *\r\n   * - **`abstract`** - {boolean=} - An abstract state will never be directly activated,\r\n   *   but can provide inherited properties to its common children states.\r\n   *\r\n   * <a id='onEnter'></a>\r\n   *\r\n   * - **`onEnter`** - {object=} - Callback function for when a state is entered. Good way\r\n   *   to trigger an action or dispatch an event, such as opening a dialog.\r\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\r\n   *\r\n   * <a id='onExit'></a>\r\n   *\r\n   * - **`onExit`** - {object=} - Callback function for when a state is exited. Good way to\r\n   *   trigger an action or dispatch an event, such as opening a dialog.\r\n   * If minifying your scripts, make sure to use the `['injection1', 'injection2', function(injection1, injection2){}]` syntax.\r\n   *\r\n   * <a id='reloadOnSearch'></a>\r\n   *\r\n   * - **`reloadOnSearch = true`** - {boolean=} - If `false`, will not retrigger the same state\r\n   *   just because a search/query parameter has changed (via $location.search() or $location.hash()).\r\n   *   Useful for when you'd like to modify $location.search() without triggering a reload.\r\n   *\r\n   * <a id='data'></a>\r\n   *\r\n   * - **`data`** - {object=} - Arbitrary data object, useful for custom configuration.\r\n   *\r\n   * #### Example:\r\n   * Some state name examples\r\n   * ```js\r\n   * // stateName can be a single top-level name (must be unique).\r\n   * $stateProvider.state(\"home\", {});\r\n   *\r\n   * // Or it can be a nested state name. This state is a child of the\r\n   * // above \"home\" state.\r\n   * $stateProvider.state(\"home.newest\", {});\r\n   *\r\n   * // Nest states as deeply as needed.\r\n   * $stateProvider.state(\"home.newest.abc.xyz.inception\", {});\r\n   *\r\n   * // state() returns $stateProvider, so you can chain state declarations.\r\n   * $stateProvider\r\n   *   .state(\"home\", {})\r\n   *   .state(\"about\", {})\r\n   *   .state(\"contacts\", {});\r\n   * ```\r\n   *\r\n   * @param {string} name A unique state name, e.g. \"home\", \"about\", \"contacts\".\r\n   * To create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".\r\n   * @param {object} definition State configuration object.\r\n   */\r\n  state(name: string, definition: Ng1StateDeclaration): StateProvider;\r\n  state(definition: Ng1StateDeclaration): StateProvider;\r\n  state(name: any, definition?: any) {\r\n    if (isObject(name)) {\r\n      definition = name;\r\n    } else {\r\n      definition.name = name;\r\n    }\r\n    this.stateRegistry.register(definition);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Registers an invalid state handler\r\n   *\r\n   * This is a passthrough to [[StateService.onInvalid]] for ng1.\r\n   */\r\n\r\n  onInvalid(callback: OnInvalidCallback): Function {\r\n    return this.stateService.onInvalid(callback);\r\n  }\r\n}\r\n",
    "/** @publicapi @module ng1 */ /** */\r\nimport {\r\n  StateObject,\r\n  TransitionStateHookFn,\r\n  HookResult,\r\n  Transition,\r\n  services,\r\n  ResolveContext,\r\n  extend,\r\n} from '@uirouter/core';\r\nimport { getLocals } from '../services';\r\nimport { Ng1StateDeclaration } from '../interface';\r\n\r\n/**\r\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\r\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\r\n *\r\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\r\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\r\n *\r\n * @internalapi\r\n */\r\nexport const getStateHookBuilder = (hookName: 'onEnter' | 'onExit' | 'onRetain') =>\r\n  function stateHookBuilder(stateObject: StateObject): TransitionStateHookFn {\r\n    const hook = stateObject[hookName];\r\n    const pathname = hookName === 'onExit' ? 'from' : 'to';\r\n\r\n    function decoratedNg1Hook(trans: Transition, state: Ng1StateDeclaration): HookResult {\r\n      const resolveContext = new ResolveContext(trans.treeChanges(pathname));\r\n      const subContext = resolveContext.subContext(state.$$state());\r\n      const locals = extend(getLocals(subContext), { $state$: state, $transition$: trans });\r\n      return services.$injector.invoke(hook, this, locals);\r\n    }\r\n\r\n    return hook ? decoratedNg1Hook : undefined;\r\n  };\r\n",
    "/** @publicapi @module ng1 */ /** */\r\nimport { LocationConfig, LocationServices, UIRouter, ParamType, isDefined } from '@uirouter/core';\r\nimport { val, createProxyFunctions, removeFrom, isObject } from '@uirouter/core';\r\nimport { ILocationService, ILocationProvider, IWindowService } from 'angular';\r\n\r\n/**\r\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\r\n * @internalapi\r\n */\r\nexport class Ng1LocationServices implements LocationConfig, LocationServices {\r\n  private $locationProvider: ILocationProvider;\r\n  private $location: ILocationService;\r\n  private $sniffer: any;\r\n  private $browser: any;\r\n  private $window: IWindowService;\r\n\r\n  path;\r\n  search;\r\n  hash;\r\n  hashPrefix;\r\n  port;\r\n  protocol;\r\n  host;\r\n\r\n  private _baseHref: string;\r\n\r\n  // .onChange() registry\r\n  private _urlListeners: Function[] = [];\r\n\r\n  /**\r\n   * Applys ng1-specific path parameter encoding\r\n   *\r\n   * The Angular 1 `$location` service is a bit weird.\r\n   * It doesn't allow slashes to be encoded/decoded bi-directionally.\r\n   *\r\n   * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\r\n   *\r\n   * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\r\n   *\r\n   * @param router\r\n   */\r\n  static monkeyPatchPathParameterType(router: UIRouter) {\r\n    const pathType: ParamType = router.urlMatcherFactory.type('path');\r\n\r\n    pathType.encode = (x: any) =>\r\n      x != null ? x.toString().replace(/(~|\\/)/g, (m) => ({ '~': '~~', '/': '~2F' }[m])) : x;\r\n\r\n    pathType.decode = (x: string) =>\r\n      x != null ? x.toString().replace(/(~~|~2F)/g, (m) => ({ '~~': '~', '~2F': '/' }[m])) : x;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  dispose() {}\r\n\r\n  constructor($locationProvider: ILocationProvider) {\r\n    this.$locationProvider = $locationProvider;\r\n    const _lp = val($locationProvider);\r\n    createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\r\n  }\r\n\r\n  onChange(callback: Function) {\r\n    this._urlListeners.push(callback);\r\n    return () => removeFrom(this._urlListeners)(callback);\r\n  }\r\n\r\n  html5Mode() {\r\n    let html5Mode: any = this.$locationProvider.html5Mode();\r\n    html5Mode = isObject(html5Mode) ? html5Mode.enabled : html5Mode;\r\n    return html5Mode && this.$sniffer.history;\r\n  }\r\n\r\n  baseHref() {\r\n    return this._baseHref || (this._baseHref = this.$browser.baseHref() || this.$window.location.pathname);\r\n  }\r\n\r\n  url(newUrl?: string, replace = false, state?) {\r\n    if (isDefined(newUrl)) this.$location.url(newUrl);\r\n    if (replace) this.$location.replace();\r\n    if (state) this.$location.state(state);\r\n    return this.$location.url();\r\n  }\r\n\r\n  _runtimeServices($rootScope, $location: ILocationService, $sniffer, $browser, $window: IWindowService) {\r\n    this.$location = $location;\r\n    this.$sniffer = $sniffer;\r\n    this.$browser = $browser;\r\n    this.$window = $window;\r\n\r\n    // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\r\n    $rootScope.$on('$locationChangeSuccess', (evt) => this._urlListeners.forEach((fn) => fn(evt)));\r\n    const _loc = val($location);\r\n\r\n    // Bind these LocationService functions to $location\r\n    createProxyFunctions(_loc, this, _loc, ['replace', 'path', 'search', 'hash']);\r\n    // Bind these LocationConfig functions to $location\r\n    createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\r\n  }\r\n}\r\n",
    "/** @publicapi @module url */ /** */\r\nimport {\r\n  UIRouter,\r\n  LocationServices,\r\n  $InjectorLike,\r\n  BaseUrlRule,\r\n  UrlRuleHandlerFn,\r\n  UrlMatcher,\r\n  IInjectable,\r\n  UrlRouter,\r\n} from '@uirouter/core';\r\nimport { services, isString, isFunction, isArray, identity } from '@uirouter/core';\r\n\r\nexport interface RawNg1RuleFunction {\r\n  ($injector: $InjectorLike, $location: LocationServices): string | void;\r\n}\r\n\r\n/**\r\n * Manages rules for client-side URL\r\n *\r\n * ### Deprecation warning:\r\n * This class is now considered to be an internal API\r\n * Use the [[UrlService]] instead.\r\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\r\n *\r\n * This class manages the router rules for what to do when the URL changes.\r\n *\r\n * This provider remains for backwards compatibility.\r\n *\r\n * @internalapi\r\n * @deprecated\r\n */\r\nexport class UrlRouterProvider {\r\n  static injectableHandler(router: UIRouter, handler: IInjectable): UrlRuleHandlerFn {\r\n    return (match) => services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params });\r\n  }\r\n\r\n  /** @hidden */\r\n  constructor(/** @hidden */ private router: UIRouter) {}\r\n\r\n  /** @hidden */\r\n  $get(): UrlRouter {\r\n    const urlService = this.router.urlService;\r\n    this.router.urlRouter.update(true);\r\n    if (!urlService.interceptDeferred) urlService.listen();\r\n    return this.router.urlRouter;\r\n  }\r\n\r\n  /**\r\n   * Registers a url handler function.\r\n   *\r\n   * Registers a low level url handler (a `rule`).\r\n   * A rule detects specific URL patterns and returns a redirect, or performs some action.\r\n   *\r\n   * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * var app = angular.module('app', ['ui.router.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *   // Here's an example of how you might allow case insensitive urls\r\n   *   $urlRouterProvider.rule(function ($injector, $location) {\r\n   *     var path = $location.path(),\r\n   *         normalized = path.toLowerCase();\r\n   *\r\n   *     if (path !== normalized) {\r\n   *       return normalized;\r\n   *     }\r\n   *   });\r\n   * });\r\n   * ```\r\n   *\r\n   * @param ruleFn\r\n   * Handler function that takes `$injector` and `$location` services as arguments.\r\n   * You can use them to detect a url and return a different url as a string.\r\n   *\r\n   * @return [[UrlRouterProvider]] (`this`)\r\n   */\r\n  rule(ruleFn: RawNg1RuleFunction): UrlRouterProvider {\r\n    if (!isFunction(ruleFn)) throw new Error(\"'rule' must be a function\");\r\n\r\n    const match = () => ruleFn(services.$injector, this.router.locationService);\r\n\r\n    const rule = new BaseUrlRule(match, identity);\r\n    this.router.urlService.rules.rule(rule);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Defines the path or behavior to use when no url can be matched.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * var app = angular.module('app', ['ui.router.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *   // if the path doesn't match any of the urls you configured\r\n   *   // otherwise will take care of routing the user to the\r\n   *   // specified url\r\n   *   $urlRouterProvider.otherwise('/index');\r\n   *\r\n   *   // Example of using function rule as param\r\n   *   $urlRouterProvider.otherwise(function ($injector, $location) {\r\n   *     return '/a/valid/url';\r\n   *   });\r\n   * });\r\n   * ```\r\n   *\r\n   * @param rule\r\n   * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\r\n   * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\r\n   *\r\n   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\r\n   */\r\n  otherwise(rule: string | RawNg1RuleFunction): UrlRouterProvider {\r\n    const urlRules = this.router.urlService.rules;\r\n    if (isString(rule)) {\r\n      urlRules.otherwise(rule);\r\n    } else if (isFunction(rule)) {\r\n      urlRules.otherwise(() => rule(services.$injector, this.router.locationService));\r\n    } else {\r\n      throw new Error(\"'rule' must be a string or function\");\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Registers a handler for a given url matching.\r\n   *\r\n   * If the handler is a string, it is\r\n   * treated as a redirect, and is interpolated according to the syntax of match\r\n   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\r\n   *\r\n   * If the handler is a function, it is injectable.\r\n   * It gets invoked if `$location` matches.\r\n   * You have the option of inject the match object as `$match`.\r\n   *\r\n   * The handler can return\r\n   *\r\n   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\r\n   *   will continue trying to find another one that matches.\r\n   * - **string** which is treated as a redirect and passed to `$location.url()`\r\n   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * var app = angular.module('app', ['ui.router.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\r\n   *     if ($state.$current.navigable !== state ||\r\n   *         !equalForKeys($match, $stateParams) {\r\n   *      $state.transitionTo(state, $match, false);\r\n   *     }\r\n   *   });\r\n   * });\r\n   * ```\r\n   *\r\n   * @param what A pattern string to match, compiled as a [[UrlMatcher]].\r\n   * @param handler The path (or function that returns a path) that you want to redirect your user to.\r\n   * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\r\n   *\r\n   * Note: the handler may also invoke arbitrary code, such as `$state.go()`\r\n   */\r\n  when(what: RegExp | UrlMatcher | string, handler: string | IInjectable): this {\r\n    if (isArray(handler) || isFunction(handler)) {\r\n      handler = UrlRouterProvider.injectableHandler(this.router, handler);\r\n    }\r\n\r\n    this.router.urlService.rules.when(what, handler as any);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Disables monitoring of the URL.\r\n   *\r\n   * Call this method before UI-Router has bootstrapped.\r\n   * It will stop UI-Router from performing the initial url sync.\r\n   *\r\n   * This can be useful to perform some asynchronous initialization before the router starts.\r\n   * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * var app = angular.module('app', ['ui.router']);\r\n   *\r\n   * app.config(function ($urlRouterProvider) {\r\n   *   // Prevent $urlRouter from automatically intercepting URL changes;\r\n   *   $urlRouterProvider.deferIntercept();\r\n   * })\r\n   *\r\n   * app.run(function (MyService, $urlRouter, $http) {\r\n   *   $http.get(\"/stuff\").then(function(resp) {\r\n   *     MyService.doStuff(resp.data);\r\n   *     $urlRouter.listen();\r\n   *     $urlRouter.sync();\r\n   *   });\r\n   * });\r\n   * ```\r\n   *\r\n   * @param defer Indicates whether to defer location change interception.\r\n   *        Passing no parameter is equivalent to `true`.\r\n   */\r\n  deferIntercept(defer?: boolean): void {\r\n    this.router.urlService.deferIntercept(defer);\r\n  }\r\n}\r\n",
    "/* eslint-disable @typescript-eslint/no-empty-function */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/**\r\n * # Angular 1 types\r\n *\r\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\r\n * The customizations to the core types for Angular UI-Router are documented here.\r\n *\r\n * The optional [[$resolve]] service is also documented here.\r\n *\r\n * @preferred @publicapi @module ng1\r\n */ /** */\r\nimport { ng as angular } from './angular';\r\nimport {\r\n  IRootScopeService,\r\n  IQService,\r\n  ILocationService,\r\n  ILocationProvider,\r\n  IHttpService,\r\n  ITemplateCacheService,\r\n} from 'angular';\r\nimport {\r\n  services,\r\n  applyPairs,\r\n  isString,\r\n  trace,\r\n  extend,\r\n  UIRouter,\r\n  StateService,\r\n  UrlRouter,\r\n  UrlMatcherFactory,\r\n  ResolveContext,\r\n  unnestR,\r\n  TypedMap,\r\n} from '@uirouter/core';\r\nimport { ng1ViewsBuilder, getNg1ViewConfigFactory } from './statebuilders/views';\r\nimport { TemplateFactory } from './templateFactory';\r\nimport { StateProvider } from './stateProvider';\r\nimport { getStateHookBuilder } from './statebuilders/onEnterExitRetain';\r\nimport { Ng1LocationServices } from './locationServices';\r\nimport { UrlRouterProvider } from './urlRouterProvider';\r\nimport IInjectorService = angular.auto.IInjectorService;\r\n\r\nangular.module('ui.router.angular1', []);\r\nconst mod_init = angular.module('ui.router.init', ['ng']);\r\nconst mod_util = angular.module('ui.router.util', ['ui.router.init']);\r\nconst mod_rtr = angular.module('ui.router.router', ['ui.router.util']);\r\nconst mod_state = angular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\r\nconst mod_main = angular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\r\nconst mod_cmpt = angular.module('ui.router.compat', ['ui.router']);\r\n\r\ndeclare module '@uirouter/core/lib/router' {\r\n  interface UIRouter {\r\n    /** @hidden */\r\n    stateProvider: StateProvider;\r\n    /** @hidden */\r\n    urlRouterProvider: UrlRouterProvider;\r\n  }\r\n}\r\n\r\nlet router: UIRouter = null;\r\n\r\n$uiRouterProvider.$inject = ['$locationProvider'];\r\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\r\nfunction $uiRouterProvider($locationProvider: ILocationProvider) {\r\n  // Create a new instance of the Router when the $uiRouterProvider is initialized\r\n  router = this.router = new UIRouter();\r\n  router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\r\n\r\n  // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\r\n  router.stateRegistry.decorator('views', ng1ViewsBuilder);\r\n  router.stateRegistry.decorator('onExit', getStateHookBuilder('onExit'));\r\n  router.stateRegistry.decorator('onRetain', getStateHookBuilder('onRetain'));\r\n  router.stateRegistry.decorator('onEnter', getStateHookBuilder('onEnter'));\r\n\r\n  router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\r\n\r\n  // Disable decoding of params by UrlMatcherFactory because $location already handles this\r\n  router.urlService.config._decodeParams = false;\r\n\r\n  const ng1LocationService = (router.locationService = router.locationConfig = new Ng1LocationServices(\r\n    $locationProvider\r\n  ));\r\n\r\n  Ng1LocationServices.monkeyPatchPathParameterType(router);\r\n\r\n  // backwards compat: also expose router instance as $uiRouterProvider.router\r\n  router['router'] = router;\r\n  router['$get'] = $get;\r\n  $get.$inject = ['$location', '$browser', '$window', '$sniffer', '$rootScope', '$http', '$templateCache'];\r\n  function $get(\r\n    $location: ILocationService,\r\n    $browser: any,\r\n    $window: any,\r\n    $sniffer: any,\r\n    $rootScope: ng.IScope,\r\n    $http: IHttpService,\r\n    $templateCache: ITemplateCacheService\r\n  ) {\r\n    ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser, $window);\r\n    delete router['router'];\r\n    delete router['$get'];\r\n    return router;\r\n  }\r\n  return router;\r\n}\r\n\r\nconst getProviderFor = (serviceName) => [\r\n  '$uiRouterProvider',\r\n  ($urp) => {\r\n    const service = $urp.router[serviceName];\r\n    service['$get'] = () => service;\r\n    return service;\r\n  },\r\n];\r\n\r\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\r\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\r\nfunction runBlock($injector: IInjectorService, $q: IQService, $uiRouter: UIRouter) {\r\n  services.$injector = $injector;\r\n  services.$q = <any>$q;\r\n\r\n  // https://github.com/angular-ui/ui-router/issues/3678\r\n  if (!Object.prototype.hasOwnProperty.call($injector, 'strictDi')) {\r\n    try {\r\n      $injector.invoke(function (checkStrictDi) {});\r\n    } catch (error) {\r\n      $injector.strictDi = !!/strict mode/.exec(error && error.toString());\r\n    }\r\n  }\r\n\r\n  // The $injector is now available.\r\n  // Find any resolvables that had dependency annotation deferred\r\n  $uiRouter.stateRegistry\r\n    .get()\r\n    .map((x) => x.$$state().resolvables)\r\n    .reduce(unnestR, [])\r\n    .filter((x) => x.deps === 'deferred')\r\n    .forEach((resolvable) => (resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi)));\r\n}\r\n\r\n// $urlRouter service and $urlRouterProvider\r\nconst getUrlRouterProvider = (uiRouter: UIRouter) => (uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter));\r\n\r\n// $state service and $stateProvider\r\n// $urlRouter service and $urlRouterProvider\r\nconst getStateProvider = () => extend(router.stateProvider, { $get: () => router.stateService });\r\n\r\nwatchDigests.$inject = ['$rootScope'];\r\nexport function watchDigests($rootScope: IRootScopeService) {\r\n  $rootScope.$watch(function () {\r\n    trace.approximateDigests++;\r\n  });\r\n}\r\n\r\nmod_init.provider('$uiRouter', <any>$uiRouterProvider);\r\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\r\nmod_util.provider('$urlService', getProviderFor('urlService'));\r\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', () => router.urlMatcherFactory]);\r\nmod_util.provider('$templateFactory', () => new TemplateFactory());\r\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\r\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\r\nmod_state.provider('$transitions', getProviderFor('transitionService'));\r\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\r\n\r\nmod_state.factory('$stateParams', ['$uiRouter', ($uiRouter: UIRouter) => $uiRouter.globals.params]);\r\nmod_main.factory('$view', () => router.viewService);\r\nmod_main.service('$trace', () => trace);\r\n\r\nmod_main.run(watchDigests);\r\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory: UrlMatcherFactory) {}]);\r\nmod_state.run(['$state', function ($state: StateService) {}]);\r\nmod_rtr.run(['$urlRouter', function ($urlRouter: UrlRouter) {}]);\r\nmod_init.run(runBlock);\r\n\r\n/** @hidden TODO: find a place to move this */\r\nexport const getLocals = (ctx: ResolveContext): TypedMap<any> => {\r\n  const tokens = ctx.getTokens().filter(isString);\r\n\r\n  const tuples = tokens.map((key) => {\r\n    const resolvable = ctx.getResolvable(key);\r\n    const waitPolicy = ctx.getPolicy(resolvable).async;\r\n    return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\r\n  });\r\n\r\n  return tuples.reduce(applyPairs, {});\r\n};\r\n",
    "/* eslint-disable @typescript-eslint/no-empty-interface */\r\n/* eslint-disable prefer-const */\r\n/**\r\n * # Angular 1 Directives\r\n *\r\n * These are the directives included in UI-Router for Angular 1.\r\n * These directives are used in templates to create viewports and link/navigate to states.\r\n *\r\n * @preferred @publicapi @module directives\r\n */ /** */\r\nimport { ng as angular } from '../angular';\r\nimport { IAugmentedJQuery, ITimeoutService, IScope, IInterpolateService } from 'angular';\r\n\r\nimport {\r\n  Obj,\r\n  extend,\r\n  forEach,\r\n  tail,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  parse,\r\n  noop,\r\n  unnestR,\r\n  identity,\r\n  uniqR,\r\n  inArray,\r\n  removeFrom,\r\n  RawParams,\r\n  PathNode,\r\n  StateOrName,\r\n  StateService,\r\n  StateDeclaration,\r\n  UIRouter,\r\n} from '@uirouter/core';\r\nimport { UIViewData } from './viewDirective';\r\n\r\n/** @hidden Used for typedoc */\r\nexport interface ng1_directive {}\r\n\r\n/** @hidden */\r\nfunction parseStateRef(ref: string) {\r\n  const paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/);\r\n  if (paramsOnly) ref = '(' + paramsOnly[1] + ')';\r\n\r\n  const parsed = ref.replace(/\\n/g, ' ').match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\r\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\r\n  return { state: parsed[1] || null, paramExpr: parsed[3] || null };\r\n}\r\n\r\n/** @hidden */\r\nfunction stateContext(el: IAugmentedJQuery) {\r\n  const $uiView: UIViewData = (el.parent() as IAugmentedJQuery).inheritedData('$uiView');\r\n  const path: PathNode[] = parse('$cfg.path')($uiView);\r\n  return path ? tail(path).state.name : undefined;\r\n}\r\n\r\n/** @hidden */\r\nfunction processedDef($state: StateService, $element: IAugmentedJQuery, def: Def): Def {\r\n  const uiState = def.uiState || $state.current.name;\r\n  const uiStateOpts = extend(defaultOpts($element, $state), def.uiStateOpts || {});\r\n  const href = $state.href(uiState, def.uiStateParams, uiStateOpts);\r\n  return { uiState, uiStateParams: def.uiStateParams, uiStateOpts, href };\r\n}\r\n\r\n/** @hidden */\r\ninterface TypeInfo {\r\n  attr: string;\r\n  isAnchor: boolean;\r\n  clickable: boolean;\r\n}\r\n\r\n/** @hidden */\r\nfunction getTypeInfo(el: IAugmentedJQuery): TypeInfo {\r\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\r\n  const isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\r\n  const isForm = el[0].nodeName === 'FORM';\r\n\r\n  return {\r\n    attr: isForm ? 'action' : isSvg ? 'xlink:href' : 'href',\r\n    isAnchor: el.prop('tagName').toUpperCase() === 'A',\r\n    clickable: !isForm,\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nfunction clickHook(\r\n  el: IAugmentedJQuery,\r\n  $state: StateService,\r\n  $timeout: ITimeoutService,\r\n  type: TypeInfo,\r\n  getDef: () => Def\r\n) {\r\n  return function (e: JQueryMouseEventObject) {\r\n    const button = e.which || e.button,\r\n      target = getDef();\r\n\r\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || el.attr('target'))) {\r\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\r\n      const transition = $timeout(function () {\r\n        if (!el.attr('disabled')) {\r\n          $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\r\n        }\r\n      });\r\n      e.preventDefault();\r\n\r\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\r\n      let ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;\r\n\r\n      e.preventDefault = function () {\r\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nfunction defaultOpts(el: IAugmentedJQuery, $state: StateService) {\r\n  return {\r\n    relative: stateContext(el) || $state.$current,\r\n    inherit: true,\r\n    source: 'sref',\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nfunction bindEvents(element: IAugmentedJQuery, scope: IScope, hookFn: EventListener, uiStateOpts: any): void {\r\n  let events;\r\n\r\n  if (uiStateOpts) {\r\n    events = uiStateOpts.events;\r\n  }\r\n\r\n  if (!isArray(events)) {\r\n    events = ['click'];\r\n  }\r\n\r\n  const on = element.on ? 'on' : 'bind';\r\n  for (const event of events) {\r\n    element[on](event, hookFn);\r\n  }\r\n\r\n  scope.$on('$destroy', function () {\r\n    const off = element.off ? 'off' : 'unbind';\r\n    for (const event of events) {\r\n      element[off](event, hookFn as any);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * `ui-sref`: A directive for linking to a state\r\n *\r\n * A directive which links to a state (and optionally, parameters).\r\n * When clicked, this directive activates the linked state with the supplied parameter values.\r\n *\r\n * ### Linked State\r\n * The attribute value of the `ui-sref` is the name of the state to link to.\r\n *\r\n * #### Example:\r\n * This will activate the `home` state when the link is clicked.\r\n * ```html\r\n * <a ui-sref=\"home\">Home</a>\r\n * ```\r\n *\r\n * ### Relative Links\r\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\r\n * You just need to be aware that the path is relative to the state that *created* the link.\r\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\r\n *\r\n * #### Example:\r\n * Both these links are relative to the parent state, even when a child state is currently active.\r\n * ```html\r\n * <a ui-sref=\".child1\">child 1 state</a>\r\n * <a ui-sref=\".child2\">child 2 state</a>\r\n * ```\r\n *\r\n * This link activates the parent state.\r\n * ```html\r\n * <a ui-sref=\"^\">Return</a>\r\n * ```\r\n *\r\n * ### hrefs\r\n * If the linked state has a URL, the directive will automatically generate and\r\n * update the `href` attribute (using the [[StateService.href]]  method).\r\n *\r\n * #### Example:\r\n * Assuming the `users` state has a url of `/users/`\r\n * ```html\r\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\r\n * ```\r\n *\r\n * ### Parameter Values\r\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\r\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\r\n * The content inside the parentheses is an expression, evaluated to the parameter values.\r\n *\r\n * #### Example:\r\n * This example renders a list of links to users.\r\n * The state's `userId` parameter value comes from each user's `user.id` property.\r\n * ```html\r\n * <li ng-repeat=\"user in users\">\r\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * Note:\r\n * The parameter values expression is `$watch`ed for updates.\r\n *\r\n * ### Transition Options\r\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\r\n * Options are restricted to `location`, `inherit`, and `reload`.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\r\n * ```\r\n *\r\n * ### Other DOM Events\r\n *\r\n * You can also customize which DOM events to respond to (instead of `click`) by\r\n * providing an `events` array in the `ui-sref-opts` attribute.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\r\n * ```\r\n *\r\n * ### Highlighting the active link\r\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\r\n *\r\n * ### Examples\r\n * If you have the following template:\r\n *\r\n * ```html\r\n * <a ui-sref=\"home\">Home</a>\r\n * <a ui-sref=\"about\">About</a>\r\n * <a ui-sref=\"{page: 2}\">Next page</a>\r\n *\r\n * <ul>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\r\n *     </li>\r\n * </ul>\r\n * ```\r\n *\r\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\r\n *\r\n * ```html\r\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\r\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\r\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\r\n *\r\n * <ul>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\r\n *     </li>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\r\n *     </li>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\r\n *     </li>\r\n * </ul>\r\n *\r\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\r\n * ```\r\n *\r\n * ### Notes\r\n *\r\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\r\n * #### Example:\r\n * Sets the `lang` parameter to `en` and remains on the same state.\r\n *\r\n * ```html\r\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\r\n * ```\r\n *\r\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\r\n *\r\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\r\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\r\n */\r\nlet uiSrefDirective: ng1_directive;\r\nuiSrefDirective = [\r\n  '$uiRouter',\r\n  '$timeout',\r\n  function $StateRefDirective($uiRouter: UIRouter, $timeout: ITimeoutService) {\r\n    const $state = $uiRouter.stateService;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\r\n      link: function (scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\r\n        const type = getTypeInfo(element);\r\n        const active = uiSrefActive[1] || uiSrefActive[0];\r\n        let unlinkInfoFn: Function = null;\r\n\r\n        const rawDef = {} as Def;\r\n        const getDef = () => processedDef($state, element, rawDef);\r\n\r\n        const ref = parseStateRef(attrs.uiSref);\r\n        rawDef.uiState = ref.state;\r\n        rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\r\n\r\n        function update() {\r\n          const def = getDef();\r\n          if (unlinkInfoFn) unlinkInfoFn();\r\n          if (active) unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\r\n          if (def.href != null) attrs.$set(type.attr, def.href);\r\n        }\r\n\r\n        if (ref.paramExpr) {\r\n          scope.$watch(\r\n            ref.paramExpr,\r\n            function (val) {\r\n              rawDef.uiStateParams = extend({}, val);\r\n              update();\r\n            },\r\n            true\r\n          );\r\n          rawDef.uiStateParams = extend({}, scope.$eval(ref.paramExpr));\r\n        }\r\n\r\n        update();\r\n\r\n        scope.$on('$destroy', <any>$uiRouter.stateRegistry.onStatesChanged(update));\r\n        scope.$on('$destroy', <any>$uiRouter.transitionService.onSuccess({}, update));\r\n\r\n        if (!type.clickable) return;\r\n        const hookFn = clickHook(element, $state, $timeout, type, getDef);\r\n        bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\r\n      },\r\n    };\r\n  },\r\n];\r\n\r\n/**\r\n * `ui-state`: A fully dynamic directive for linking to a state\r\n *\r\n * A directive which links to a state (and optionally, parameters).\r\n * When clicked, this directive activates the linked state with the supplied parameter values.\r\n *\r\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\r\n *\r\n * A directive which links to a state (and optionally, parameters).\r\n * When clicked, this directive activates the linked state with the supplied parameter values.\r\n *\r\n * ### Linked State\r\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\r\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\r\n *\r\n * #### Example:\r\n * Create a list of links.\r\n * ```html\r\n * <li ng-repeat=\"link in navlinks\">\r\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Relative Links\r\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\r\n * You just need to be aware that the path is relative to the state that *created* the link.\r\n * This allows a state to create relative `ui-state` which always targets the same destination.\r\n *\r\n * ### hrefs\r\n * If the linked state has a URL, the directive will automatically generate and\r\n * update the `href` attribute (using the [[StateService.href]]  method).\r\n *\r\n * ### Parameter Values\r\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\r\n * Param values should be provided using the `ui-state-params` attribute.\r\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\r\n *\r\n * #### Example:\r\n * This example renders a list of links with param values.\r\n * The state's `userId` parameter value comes from each user's `user.id` property.\r\n * ```html\r\n * <li ng-repeat=\"link in navlinks\">\r\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Transition Options\r\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\r\n * Options are restricted to `location`, `inherit`, and `reload`.\r\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\r\n * ```\r\n *\r\n * ### Other DOM Events\r\n *\r\n * You can also customize which DOM events to respond to (instead of `click`) by\r\n * providing an `events` array in the `ui-state-opts` attribute.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\r\n * ```\r\n *\r\n * ### Highlighting the active link\r\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\r\n *\r\n * ### Notes\r\n *\r\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\r\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\r\n *\r\n * #### Example:\r\n * Sets the `lang` parameter to `en` and remains on the same state.\r\n *\r\n * ```html\r\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\r\n * ```\r\n *\r\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\r\n * ```\r\n */\r\nlet uiStateDirective: ng1_directive;\r\nuiStateDirective = [\r\n  '$uiRouter',\r\n  '$timeout',\r\n  function $StateRefDynamicDirective($uiRouter: UIRouter, $timeout: ITimeoutService) {\r\n    const $state = $uiRouter.stateService;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\r\n      link: function (scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\r\n        const type = getTypeInfo(element);\r\n        const active = uiSrefActive[1] || uiSrefActive[0];\r\n        let unlinkInfoFn: Function = null;\r\n        let hookFn;\r\n\r\n        const rawDef = {} as Def;\r\n        const getDef = () => processedDef($state, element, rawDef);\r\n\r\n        const inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\r\n        const watchDeregFns = inputAttrs.reduce((acc, attr) => ((acc[attr] = noop), acc), {});\r\n\r\n        function update() {\r\n          const def = getDef();\r\n          if (unlinkInfoFn) unlinkInfoFn();\r\n          if (active) unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\r\n          if (def.href != null) attrs.$set(type.attr, def.href);\r\n        }\r\n\r\n        inputAttrs.forEach((field) => {\r\n          rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\r\n\r\n          attrs.$observe(field, (expr) => {\r\n            watchDeregFns[field]();\r\n            watchDeregFns[field] = scope.$watch(\r\n              expr,\r\n              (newval) => {\r\n                rawDef[field] = newval;\r\n                update();\r\n              },\r\n              true\r\n            );\r\n          });\r\n        });\r\n\r\n        update();\r\n\r\n        scope.$on('$destroy', <any>$uiRouter.stateRegistry.onStatesChanged(update));\r\n        scope.$on('$destroy', <any>$uiRouter.transitionService.onSuccess({}, update));\r\n\r\n        if (!type.clickable) return;\r\n        hookFn = clickHook(element, $state, $timeout, type, getDef);\r\n        bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\r\n      },\r\n    };\r\n  },\r\n];\r\n\r\n/**\r\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\r\n *\r\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\r\n * related directive's state is active (and remove them when it is inactive).\r\n *\r\n * The primary use-case is to highlight the active link in navigation menus,\r\n * distinguishing it from the inactive menu items.\r\n *\r\n * ### Linking to a `ui-sref` or `ui-state`\r\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\r\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\r\n *\r\n * ### Matching\r\n *\r\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\r\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\r\n *\r\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\r\n * This is an \"exact match\" which uses [[StateService.is]].\r\n *\r\n * ### Parameter values\r\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\r\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\r\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Examples\r\n *\r\n * Given the following template:\r\n * #### Example:\r\n * ```html\r\n * <ul>\r\n *   <li ui-sref-active=\"active\" class=\"item\">\r\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\r\n *   </li>\r\n * </ul>\r\n * ```\r\n *\r\n * When the app state is `app.user` (or any child state),\r\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\r\n * the resulting HTML will appear as (note the 'active' class):\r\n *\r\n * ```html\r\n * <ul>\r\n *   <li ui-sref-active=\"active\" class=\"item active\">\r\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\r\n *   </li>\r\n * </ul>\r\n * ```\r\n *\r\n * ### Glob mode\r\n *\r\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\r\n * The objects keys represent active class names and values represent the respective state names/globs.\r\n * `ui-sref-active` will match if the current active state **includes** any of\r\n * the specified state names/globs, even the abstract ones.\r\n *\r\n * #### Example:\r\n * Given the following template, with \"admin\" being an abstract state:\r\n * ```html\r\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\r\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\r\n * </div>\r\n * ```\r\n *\r\n * Arrays are also supported as values in the `ngClass`-like interface.\r\n * This allows multiple states to add `active` class.\r\n *\r\n * #### Example:\r\n * Given the following template, with \"admin.roles\" being the current state, the class will be added too:\r\n * ```html\r\n * <div ui-sref-active=\"{'active': ['owner.**', 'admin.**']}\">\r\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\r\n * </div>\r\n * ```\r\n *\r\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the `<div>` and `<a>` elements.\r\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\r\n *\r\n * ### Notes:\r\n *\r\n * - The class name is interpolated **once** during the directives link time (any further changes to the\r\n * interpolated value are ignored).\r\n *\r\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\r\n */\r\nlet uiSrefActiveDirective: ng1_directive;\r\nuiSrefActiveDirective = [\r\n  '$state',\r\n  '$stateParams',\r\n  '$interpolate',\r\n  '$uiRouter',\r\n  function $StateRefActiveDirective(\r\n    $state: StateService,\r\n    $stateParams: Obj,\r\n    $interpolate: IInterpolateService,\r\n    $uiRouter: UIRouter\r\n  ) {\r\n    return {\r\n      restrict: 'A',\r\n      controller: [\r\n        '$scope',\r\n        '$element',\r\n        '$attrs',\r\n        function ($scope: IScope, $element: IAugmentedJQuery, $attrs: any) {\r\n          let states: StateData[] = [];\r\n          let activeEqClass: string;\r\n          let uiSrefActive: any;\r\n\r\n          // There probably isn't much point in $observing this\r\n          // uiSrefActive and uiSrefActiveEq share the same directive object with some\r\n          // slight difference in logic routing\r\n          activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\r\n\r\n          try {\r\n            uiSrefActive = $scope.$eval($attrs.uiSrefActive);\r\n          } catch (e) {\r\n            // Do nothing. uiSrefActive is not a valid expression.\r\n            // Fall back to using $interpolate below\r\n          }\r\n          uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\r\n          setStatesFromDefinitionObject(uiSrefActive);\r\n\r\n          // Allow uiSref to communicate with uiSrefActive[Equals]\r\n          this.$$addStateInfo = function (newState: string, newParams: Obj) {\r\n            // we already got an explicit state provided by ui-sref-active, so we\r\n            // shadow the one that comes from ui-sref\r\n            if (isObject(uiSrefActive) && states.length > 0) {\r\n              return;\r\n            }\r\n            const deregister = addState(newState, newParams, uiSrefActive);\r\n            update();\r\n            return deregister;\r\n          };\r\n\r\n          function updateAfterTransition(trans) {\r\n            trans.promise.then(update, noop);\r\n          }\r\n          $scope.$on('$destroy', setupEventListeners());\r\n          if ($uiRouter.globals.transition) {\r\n            updateAfterTransition($uiRouter.globals.transition);\r\n          }\r\n\r\n          function setupEventListeners() {\r\n            const deregisterStatesChangedListener = $uiRouter.stateRegistry.onStatesChanged(handleStatesChanged);\r\n            const deregisterOnStartListener = $uiRouter.transitionService.onStart({}, updateAfterTransition);\r\n            const deregisterStateChangeSuccessListener = $scope.$on('$stateChangeSuccess', update);\r\n            return function cleanUp() {\r\n              deregisterStatesChangedListener();\r\n              deregisterOnStartListener();\r\n              deregisterStateChangeSuccessListener();\r\n            };\r\n          }\r\n\r\n          function handleStatesChanged() {\r\n            setStatesFromDefinitionObject(uiSrefActive);\r\n          }\r\n\r\n          function setStatesFromDefinitionObject(statesDefinition: Obj) {\r\n            if (isObject(statesDefinition)) {\r\n              states = [];\r\n              forEach(statesDefinition, function (stateOrName: StateOrName | Array<StateOrName>, activeClass: string) {\r\n                // Helper function to abstract adding state.\r\n                const addStateForClass = function (stateOrName: string, activeClass: string) {\r\n                  const ref = parseStateRef(stateOrName);\r\n                  addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\r\n                };\r\n\r\n                if (isString(stateOrName)) {\r\n                  // If state is string, just add it.\r\n                  addStateForClass(stateOrName as string, activeClass);\r\n                } else if (isArray(stateOrName)) {\r\n                  // If state is an array, iterate over it and add each array item individually.\r\n                  forEach(stateOrName, function (stateOrName: string) {\r\n                    addStateForClass(stateOrName, activeClass);\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          function addState(stateName: string, stateParams: Obj, activeClass: string) {\r\n            const state = $state.get(stateName, stateContext($element));\r\n\r\n            const stateInfo = {\r\n              state: state || { name: stateName },\r\n              params: stateParams,\r\n              activeClass: activeClass,\r\n            };\r\n\r\n            states.push(stateInfo);\r\n\r\n            return function removeState() {\r\n              removeFrom(states)(stateInfo);\r\n            };\r\n          }\r\n\r\n          // Update route state\r\n          function update() {\r\n            const splitClasses = (str) => str.split(/\\s/).filter(identity);\r\n            const getClasses = (stateList: StateData[]) =>\r\n              stateList\r\n                .map((x) => x.activeClass)\r\n                .map(splitClasses)\r\n                .reduce(unnestR, []);\r\n\r\n            const allClasses = getClasses(states).concat(splitClasses(activeEqClass)).reduce(uniqR, []);\r\n            const fuzzyClasses = getClasses(states.filter((x) => $state.includes(x.state.name, x.params)));\r\n            const exactlyMatchesAny = !!states.filter((x) => $state.is(x.state.name, x.params)).length;\r\n            const exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\r\n\r\n            const addClasses = fuzzyClasses.concat(exactClasses).reduce(uniqR, []);\r\n            const removeClasses = allClasses.filter((cls) => !inArray(addClasses, cls));\r\n\r\n            $scope.$evalAsync(() => {\r\n              addClasses.forEach((className) => $element.addClass(className));\r\n              removeClasses.forEach((className) => $element.removeClass(className));\r\n            });\r\n          }\r\n\r\n          update();\r\n        },\r\n      ],\r\n    };\r\n  },\r\n];\r\n\r\n/** @hidden */\r\ninterface Def {\r\n  uiState: string;\r\n  href: string;\r\n  uiStateParams: Obj;\r\n  uiStateOpts: any;\r\n}\r\n/** @hidden */\r\ninterface StateData {\r\n  state: StateDeclaration;\r\n  params: RawParams;\r\n  activeClass: string;\r\n}\r\n\r\nangular\r\n  .module('ui.router.state')\r\n  .directive('uiSref', uiSrefDirective)\r\n  .directive('uiSrefActive', uiSrefActiveDirective)\r\n  .directive('uiSrefActiveEq', uiSrefActiveDirective)\r\n  .directive('uiState', uiStateDirective);\r\n",
    "/** @publicapi @module ng1 */ /** */\r\n\r\nimport { ng as angular } from './angular';\r\nimport { Obj, StateService, StateOrName } from '@uirouter/core';\r\n\r\n/**\r\n * `isState` Filter: truthy if the current state is the parameter\r\n *\r\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\r\n * ```\r\n */\r\n$IsStateFilter.$inject = ['$state'];\r\nfunction $IsStateFilter($state: StateService) {\r\n  const isFilter: any = function (state: StateOrName, params: Obj, options?: { relative?: StateOrName }) {\r\n    return $state.is(state, params, options);\r\n  };\r\n  isFilter.$stateful = true;\r\n  return isFilter;\r\n}\r\n\r\n/**\r\n * `includedByState` Filter: truthy if the current state includes the parameter\r\n *\r\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\r\n * ```\r\n */\r\n$IncludedByStateFilter.$inject = ['$state'];\r\nfunction $IncludedByStateFilter($state: StateService) {\r\n  const includesFilter: any = function (state: StateOrName, params: Obj, options: { relative?: StateOrName }) {\r\n    return $state.includes(state, params, options);\r\n  };\r\n  includesFilter.$stateful = true;\r\n  return includesFilter;\r\n}\r\n\r\nangular.module('ui.router.state').filter('isState', $IsStateFilter).filter('includedByState', $IncludedByStateFilter);\r\n\r\nexport { $IsStateFilter, $IncludedByStateFilter };\r\n",
    "/** @publicapi @module directives */ /** */\r\nimport {\r\n  $QLike,\r\n  ActiveUIView,\r\n  extend,\r\n  filter,\r\n  HookRegOptions,\r\n  isDefined,\r\n  isFunction,\r\n  isString,\r\n  kebobString,\r\n  noop,\r\n  Obj,\r\n  Param,\r\n  parse,\r\n  PathNode,\r\n  ResolveContext,\r\n  StateDeclaration,\r\n  tail,\r\n  trace,\r\n  Transition,\r\n  TransitionService,\r\n  TypedMap,\r\n  unnestR,\r\n  ViewService,\r\n} from '@uirouter/core';\r\nimport { IAugmentedJQuery, IInterpolateService, IScope, ITranscludeFunction } from 'angular';\r\nimport { ng as angular } from '../angular';\r\nimport { Ng1Controller, Ng1StateDeclaration } from '../interface';\r\nimport { getLocals } from '../services';\r\nimport { Ng1ViewConfig } from '../statebuilders/views';\r\nimport { ng1_directive } from './stateDirectives';\r\n\r\n/** @hidden */\r\nexport type UIViewData = {\r\n  $cfg: Ng1ViewConfig;\r\n  $uiView: ActiveUIView;\r\n};\r\n\r\n/** @hidden */\r\nexport type UIViewAnimData = {\r\n  $animEnter: Promise<any>;\r\n  $animLeave: Promise<any>;\r\n  $$animLeave: { resolve: () => any }; // \"deferred\"\r\n};\r\n\r\n/**\r\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\r\n *\r\n * ### Attributes\r\n *\r\n * - `name`: (Optional) A view name.\r\n *   The name should be unique amongst the other views in the same state.\r\n *   You can have views of the same name that live in different states.\r\n *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\r\n *\r\n * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\r\n *   Uses [[$uiViewScroll]] to do the scrolling.\r\n *\r\n * - `onload`: Expression to evaluate whenever the view updates.\r\n *\r\n * #### Example:\r\n * A view can be unnamed or named.\r\n * ```html\r\n * <!-- Unnamed -->\r\n * <div ui-view></div>\r\n *\r\n * <!-- Named -->\r\n * <div ui-view=\"viewName\"></div>\r\n *\r\n * <!-- Named (different style) -->\r\n * <ui-view name=\"viewName\"></ui-view>\r\n * ```\r\n *\r\n * You can only have one unnamed view within any template (or root html). If you are only using a\r\n * single view and it is unnamed then you can populate it like so:\r\n *\r\n * ```html\r\n * <div ui-view></div>\r\n * $stateProvider.state(\"home\", {\r\n *   template: \"<h1>HELLO!</h1>\"\r\n * })\r\n * ```\r\n *\r\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the\r\n * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\r\n *\r\n * ```js\r\n * $stateProvider.state(\"home\", {\r\n *   views: {\r\n *     \"\": {\r\n *       template: \"<h1>HELLO!</h1>\"\r\n *     }\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * But typically you'll only use the views property if you name your view or have more than one view\r\n * in the same template. There's not really a compelling reason to name a view if its the only one,\r\n * but you could if you wanted, like so:\r\n *\r\n * ```html\r\n * <div ui-view=\"main\"></div>\r\n * ```\r\n *\r\n * ```js\r\n * $stateProvider.state(\"home\", {\r\n *   views: {\r\n *     \"main\": {\r\n *       template: \"<h1>HELLO!</h1>\"\r\n *     }\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * Really though, you'll use views to set up multiple views:\r\n *\r\n * ```html\r\n * <div ui-view></div>\r\n * <div ui-view=\"chart\"></div>\r\n * <div ui-view=\"data\"></div>\r\n * ```\r\n *\r\n * ```js\r\n * $stateProvider.state(\"home\", {\r\n *   views: {\r\n *     \"\": {\r\n *       template: \"<h1>HELLO!</h1>\"\r\n *     },\r\n *     \"chart\": {\r\n *       template: \"<chart_thing/>\"\r\n *     },\r\n *     \"data\": {\r\n *       template: \"<data_thing/>\"\r\n *     }\r\n *   }\r\n * })\r\n * ```\r\n *\r\n * #### Examples for `autoscroll`:\r\n * ```html\r\n * <!-- If autoscroll present with no expression,\r\n *      then scroll ui-view into view -->\r\n * <ui-view autoscroll/>\r\n *\r\n * <!-- If autoscroll present with valid expression,\r\n *      then scroll ui-view into view if expression evaluates to true -->\r\n * <ui-view autoscroll='true'/>\r\n * <ui-view autoscroll='false'/>\r\n * <ui-view autoscroll='scopeVariable'/>\r\n * ```\r\n *\r\n * Resolve data:\r\n *\r\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\r\n * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\r\n *\r\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\r\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\r\n * depends on `$resolve` data.\r\n *\r\n * #### Example:\r\n * ```js\r\n * $stateProvider.state('home', {\r\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\r\n *   resolve: {\r\n *     user: function(UserService) { return UserService.fetchUser(); }\r\n *   }\r\n * });\r\n * ```\r\n */\r\nexport let uiView: ng1_directive;\r\n// eslint-disable-next-line prefer-const\r\nuiView = [\r\n  '$view',\r\n  '$animate',\r\n  '$uiViewScroll',\r\n  '$interpolate',\r\n  '$q',\r\n  function $ViewDirective(\r\n    $view: ViewService,\r\n    $animate: any,\r\n    $uiViewScroll: any,\r\n    $interpolate: IInterpolateService,\r\n    $q: $QLike\r\n  ) {\r\n    function getRenderer() {\r\n      return {\r\n        enter: function (element: JQuery, target: any, cb: Function) {\r\n          if (angular.version.minor > 2) {\r\n            $animate.enter(element, null, target).then(cb);\r\n          } else {\r\n            $animate.enter(element, null, target, cb);\r\n          }\r\n        },\r\n        leave: function (element: JQuery, cb: Function) {\r\n          if (angular.version.minor > 2) {\r\n            $animate.leave(element).then(cb);\r\n          } else {\r\n            $animate.leave(element, cb);\r\n          }\r\n        },\r\n      };\r\n    }\r\n\r\n    function configsEqual(config1: Ng1ViewConfig, config2: Ng1ViewConfig) {\r\n      return config1 === config2;\r\n    }\r\n\r\n    const rootData = {\r\n      $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\r\n      $uiView: {},\r\n    };\r\n\r\n    const directive = {\r\n      count: 0,\r\n      restrict: 'ECA',\r\n      terminal: true,\r\n      priority: 400,\r\n      transclude: 'element',\r\n      compile: function (tElement: JQuery, tAttrs: Obj, $transclude: ITranscludeFunction) {\r\n        return function (scope: IScope, $element: IAugmentedJQuery, attrs: Obj) {\r\n          const onloadExp = attrs['onload'] || '',\r\n            autoScrollExp = attrs['autoscroll'],\r\n            renderer = getRenderer(),\r\n            inherited = $element.inheritedData('$uiView') || rootData,\r\n            name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\r\n\r\n          let previousEl: JQuery, currentEl: JQuery, currentScope: IScope, viewConfig: Ng1ViewConfig;\r\n\r\n          const activeUIView: ActiveUIView = {\r\n            $type: 'ng1',\r\n            id: directive.count++, // Global sequential ID for ui-view tags added to DOM\r\n            name: name, // ui-view name (<div ui-view=\"name\"></div>\r\n            fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + '.' + name : name, // fully qualified name, describes location in DOM\r\n            config: null, // The ViewConfig loaded (from a state.views definition)\r\n            configUpdated: configUpdatedCallback, // Called when the matching ViewConfig changes\r\n            get creationContext() {\r\n              // The context in which this ui-view \"tag\" was created\r\n              const fromParentTagConfig = parse('$cfg.viewDecl.$context')(inherited);\r\n              // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\r\n              // See https://github.com/angular-ui/ui-router/issues/3355\r\n              const fromParentTag = parse('$uiView.creationContext')(inherited);\r\n              return fromParentTagConfig || fromParentTag;\r\n            },\r\n          };\r\n\r\n          trace.traceUIViewEvent('Linking', activeUIView);\r\n\r\n          function configUpdatedCallback(config?: Ng1ViewConfig) {\r\n            if (config && !(config instanceof Ng1ViewConfig)) return;\r\n            if (configsEqual(viewConfig, config)) return;\r\n            trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\r\n\r\n            viewConfig = config;\r\n            updateView(config);\r\n          }\r\n\r\n          $element.data('$uiView', { $uiView: activeUIView });\r\n\r\n          updateView();\r\n\r\n          const unregister = $view.registerUIView(activeUIView);\r\n          scope.$on('$destroy', function () {\r\n            trace.traceUIViewEvent('Destroying/Unregistering', activeUIView);\r\n            unregister();\r\n          });\r\n\r\n          function cleanupLastView() {\r\n            if (previousEl) {\r\n              trace.traceUIViewEvent('Removing (previous) el', previousEl.data('$uiView'));\r\n              previousEl.remove();\r\n              previousEl = null;\r\n            }\r\n\r\n            if (currentScope) {\r\n              trace.traceUIViewEvent('Destroying scope', activeUIView);\r\n              currentScope.$destroy();\r\n              currentScope = null;\r\n            }\r\n\r\n            if (currentEl) {\r\n              const _viewData = currentEl.data('$uiViewAnim');\r\n              trace.traceUIViewEvent('Animate out', _viewData);\r\n              renderer.leave(currentEl, function () {\r\n                _viewData.$$animLeave.resolve();\r\n                previousEl = null;\r\n              });\r\n\r\n              previousEl = currentEl;\r\n              currentEl = null;\r\n            }\r\n          }\r\n\r\n          function updateView(config?: Ng1ViewConfig) {\r\n            const newScope = scope.$new();\r\n            const animEnter = $q.defer(),\r\n              animLeave = $q.defer();\r\n\r\n            const $uiViewData: UIViewData = {\r\n              $cfg: config,\r\n              $uiView: activeUIView,\r\n            };\r\n\r\n            const $uiViewAnim: UIViewAnimData = {\r\n              $animEnter: animEnter.promise,\r\n              $animLeave: animLeave.promise,\r\n              $$animLeave: animLeave,\r\n            };\r\n\r\n            /**\r\n             * @ngdoc event\r\n             * @name ui.router.state.directive:ui-view#$viewContentLoading\r\n             * @eventOf ui.router.state.directive:ui-view\r\n             * @eventType emits on ui-view directive scope\r\n             * @description\r\n             *\r\n             * Fired once the view **begins loading**, *before* the DOM is rendered.\r\n             *\r\n             * @param {Object} event Event object.\r\n             * @param {string} viewName Name of the view.\r\n             */\r\n            newScope.$emit('$viewContentLoading', name);\r\n\r\n            const cloned = $transclude(newScope, function (clone) {\r\n              clone.data('$uiViewAnim', $uiViewAnim);\r\n              clone.data('$uiView', $uiViewData);\r\n              renderer.enter(clone, $element, function onUIViewEnter() {\r\n                animEnter.resolve();\r\n                if (currentScope) currentScope.$emit('$viewContentAnimationEnded');\r\n\r\n                if ((isDefined(autoScrollExp) && !autoScrollExp) || scope.$eval(autoScrollExp)) {\r\n                  $uiViewScroll(clone);\r\n                }\r\n              });\r\n\r\n              cleanupLastView();\r\n            });\r\n\r\n            currentEl = cloned;\r\n            currentScope = newScope;\r\n            /**\r\n             * @ngdoc event\r\n             * @name ui.router.state.directive:ui-view#$viewContentLoaded\r\n             * @eventOf ui.router.state.directive:ui-view\r\n             * @eventType emits on ui-view directive scope\r\n             * @description           *\r\n             * Fired once the view is **loaded**, *after* the DOM is rendered.\r\n             *\r\n             * @param {Object} event Event object.\r\n             */\r\n            currentScope.$emit('$viewContentLoaded', config || viewConfig);\r\n            currentScope.$eval(onloadExp);\r\n          }\r\n        };\r\n      },\r\n    };\r\n\r\n    return directive;\r\n  },\r\n];\r\n\r\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q'];\r\n\r\n/** @hidden */\r\nfunction $ViewDirectiveFill(\r\n  $compile: angular.ICompileService,\r\n  $controller: angular.IControllerService,\r\n  $transitions: TransitionService,\r\n  $view: ViewService,\r\n  $q: angular.IQService\r\n) {\r\n  const getControllerAs = parse('viewDecl.controllerAs');\r\n  const getResolveAs = parse('viewDecl.resolveAs');\r\n\r\n  return {\r\n    restrict: 'ECA',\r\n    priority: -400,\r\n    compile: function (tElement: JQuery) {\r\n      const initial = tElement.html();\r\n      tElement.empty();\r\n\r\n      return function (scope: IScope, $element: JQuery) {\r\n        const data: UIViewData = $element.data('$uiView');\r\n        if (!data) {\r\n          $element.html(initial);\r\n          $compile($element.contents() as any)(scope);\r\n          return;\r\n        }\r\n\r\n        const cfg: Ng1ViewConfig = data.$cfg || <any>{ viewDecl: {}, getTemplate: noop };\r\n        const resolveCtx: ResolveContext = cfg.path && new ResolveContext(cfg.path);\r\n        $element.html(cfg.getTemplate($element, resolveCtx) || initial);\r\n        trace.traceUIViewFill(data.$uiView, $element.html());\r\n\r\n        const link = $compile($element.contents() as any);\r\n        const controller = cfg.controller as angular.IControllerService;\r\n        const controllerAs: string = getControllerAs(cfg);\r\n        const resolveAs: string = getResolveAs(cfg);\r\n        const locals = resolveCtx && getLocals(resolveCtx);\r\n\r\n        scope[resolveAs] = locals;\r\n\r\n        if (controller) {\r\n          const controllerInstance = <Ng1Controller>(\r\n            $controller(controller, extend({}, locals, { $scope: scope, $element: $element }))\r\n          );\r\n          if (controllerAs) {\r\n            scope[controllerAs] = controllerInstance;\r\n            scope[controllerAs][resolveAs] = locals;\r\n          }\r\n\r\n          // TODO: Use $view service as a central point for registering component-level hooks\r\n          // Then, when a component is created, tell the $view service, so it can invoke hooks\r\n          // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\r\n          // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\r\n\r\n          $element.data('$ngControllerController', controllerInstance);\r\n          $element.children().data('$ngControllerController', controllerInstance);\r\n\r\n          registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\r\n        }\r\n\r\n        // Wait for the component to appear in the DOM\r\n        if (isString(cfg.component)) {\r\n          const kebobName = kebobString(cfg.component);\r\n          const tagRegexp = new RegExp(`^(x-|data-)?${kebobName}$`, 'i');\r\n\r\n          const getComponentController = () => {\r\n            const directiveEl = [].slice\r\n              .call($element[0].children)\r\n              .filter((el: Element) => el && el.tagName && tagRegexp.exec(el.tagName));\r\n\r\n            return directiveEl && angular.element(directiveEl).data(`$${cfg.component}Controller`);\r\n          };\r\n\r\n          const deregisterWatch = scope.$watch(getComponentController, function (ctrlInstance) {\r\n            if (!ctrlInstance) return;\r\n            registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\r\n            deregisterWatch();\r\n          });\r\n        }\r\n\r\n        link(scope);\r\n      };\r\n    },\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nconst hasComponentImpl = typeof (angular as any).module('ui.router')['component'] === 'function';\r\n/** @hidden incrementing id */\r\nlet _uiCanExitId = 0;\r\n\r\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\r\nfunction registerControllerCallbacks(\r\n  $q: angular.IQService,\r\n  $transitions: TransitionService,\r\n  controllerInstance: Ng1Controller,\r\n  $scope: IScope,\r\n  cfg: Ng1ViewConfig\r\n) {\r\n  // Call $onInit() ASAP\r\n  if (\r\n    isFunction(controllerInstance.$onInit) &&\r\n    !((cfg.viewDecl.component || cfg.viewDecl.componentProvider) && hasComponentImpl)\r\n  ) {\r\n    controllerInstance.$onInit();\r\n  }\r\n\r\n  const viewState: Ng1StateDeclaration = tail(cfg.path).state.self;\r\n\r\n  const hookOptions: HookRegOptions = { bind: controllerInstance };\r\n  // Add component-level hook for onUiParamsChanged\r\n  if (isFunction(controllerInstance.uiOnParamsChanged)) {\r\n    const resolveContext: ResolveContext = new ResolveContext(cfg.path);\r\n    const viewCreationTrans = resolveContext.getResolvable('$transition$').data;\r\n\r\n    // Fire callback on any successful transition\r\n    const paramsUpdated = ($transition$: Transition) => {\r\n      // Exit early if the $transition$ is the same as the view was created within.\r\n      // Exit early if the $transition$ will exit the state the view is for.\r\n      if ($transition$ === viewCreationTrans || $transition$.exiting().indexOf(viewState as StateDeclaration) !== -1)\r\n        return;\r\n\r\n      const toParams = $transition$.params('to') as TypedMap<any>;\r\n      const fromParams = $transition$.params<TypedMap<any>>('from') as TypedMap<any>;\r\n      const getNodeSchema = (node: PathNode) => node.paramSchema;\r\n      const toSchema: Param[] = $transition$.treeChanges('to').map(getNodeSchema).reduce(unnestR, []);\r\n      const fromSchema: Param[] = $transition$.treeChanges('from').map(getNodeSchema).reduce(unnestR, []);\r\n\r\n      // Find the to params that have different values than the from params\r\n      const changedToParams = toSchema.filter((param: Param) => {\r\n        const idx = fromSchema.indexOf(param);\r\n        return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\r\n      });\r\n\r\n      // Only trigger callback if a to param has changed or is new\r\n      if (changedToParams.length) {\r\n        const changedKeys: string[] = changedToParams.map((x) => x.id);\r\n        // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\r\n        const newValues = filter(toParams, (val, key) => changedKeys.indexOf(key) !== -1);\r\n        controllerInstance.uiOnParamsChanged(newValues, $transition$);\r\n      }\r\n    };\r\n    $scope.$on('$destroy', <any>$transitions.onSuccess({}, paramsUpdated, hookOptions));\r\n  }\r\n\r\n  // Add component-level hook for uiCanExit\r\n  if (isFunction(controllerInstance.uiCanExit)) {\r\n    const id = _uiCanExitId++;\r\n    const cacheProp = '_uiCanExitIds';\r\n\r\n    // Returns true if a redirect transition already answered truthy\r\n    const prevTruthyAnswer = (trans: Transition) =>\r\n      !!trans && ((trans[cacheProp] && trans[cacheProp][id] === true) || prevTruthyAnswer(trans.redirectedFrom()));\r\n\r\n    // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\r\n    const wrappedHook = (trans: Transition) => {\r\n      let promise;\r\n      const ids = (trans[cacheProp] = trans[cacheProp] || {});\r\n\r\n      if (!prevTruthyAnswer(trans)) {\r\n        promise = $q.when(controllerInstance.uiCanExit(trans));\r\n        promise.then((val) => (ids[id] = val !== false));\r\n      }\r\n      return promise;\r\n    };\r\n\r\n    const criteria = { exiting: viewState.name };\r\n    $scope.$on('$destroy', <any>$transitions.onBefore(criteria, wrappedHook, hookOptions));\r\n  }\r\n}\r\n\r\nangular.module('ui.router.state').directive('uiView', <any>uiView);\r\nangular.module('ui.router.state').directive('uiView', <any>$ViewDirectiveFill);\r\n",
    "/** @publicapi @module ng1 */ /** */\r\nimport { ng as angular } from './angular';\r\nimport { IServiceProviderFactory } from 'angular';\r\nimport IAnchorScrollService = angular.IAnchorScrollService;\r\nimport ITimeoutService = angular.ITimeoutService;\r\n\r\nexport interface UIViewScrollProvider {\r\n  /**\r\n   * Uses standard anchorScroll behavior\r\n   *\r\n   * Reverts [[$uiViewScroll]] back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\r\n   * service for scrolling based on the url anchor.\r\n   */\r\n  useAnchorScroll(): void;\r\n}\r\n\r\n/** @hidden */\r\nfunction $ViewScrollProvider() {\r\n  let useAnchorScroll = false;\r\n\r\n  this.useAnchorScroll = function () {\r\n    useAnchorScroll = true;\r\n  };\r\n\r\n  this.$get = [\r\n    '$anchorScroll',\r\n    '$timeout',\r\n    function ($anchorScroll: IAnchorScrollService, $timeout: ITimeoutService): Function {\r\n      if (useAnchorScroll) {\r\n        return $anchorScroll;\r\n      }\r\n\r\n      return function ($element: JQuery) {\r\n        return $timeout(\r\n          function () {\r\n            $element[0].scrollIntoView();\r\n          },\r\n          0,\r\n          false\r\n        );\r\n      };\r\n    },\r\n  ];\r\n}\r\n\r\nangular.module('ui.router.state').provider('$uiViewScroll', <IServiceProviderFactory>$ViewScrollProvider);\r\n",
    "/**\r\n * Main entry point for angular 1.x build\r\n * @publicapi @module ng1\r\n */ /** */\r\nexport * from './interface';\r\nexport * from './services';\r\nexport * from './statebuilders/views';\r\nexport * from './stateProvider';\r\nexport * from './urlRouterProvider';\r\n\r\nimport './injectables';\r\nimport './directives/stateDirectives';\r\nimport './stateFilters';\r\nimport './directives/viewDirective';\r\nimport './viewScroll';\r\n\r\nexport default 'ui.router';\r\n\r\nimport * as core from '@uirouter/core';\r\nexport { core };\r\nexport * from '@uirouter/core';\r\n"
  ],
  "names": [
    "ng_from_import.module",
    "services",
    "isDefined",
    "pick",
    "forEach",
    "isString",
    "extend",
    "ViewService",
    "ResolveContext",
    "trace",
    "isInjectable",
    "isArray",
    "tail",
    "Resolvable",
    "angular",
    "isFunction",
    "kebobString",
    "unnestR",
    "isObject",
    "createProxyFunctions",
    "val",
    "removeFrom",
    "BaseUrlRule",
    "identity",
    "UIRouter",
    "applyPairs",
    "parse",
    "noop",
    "uniqR",
    "inArray",
    "filter"
  ],
  "mappings": "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"
}