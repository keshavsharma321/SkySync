{
  "version": 3,
  "file": "resolveService.js",
  "sources": [
    "@uirouter\\angularjs\\src\\legacy\\resolveService.ts"
  ],
  "sourcesContent": [
    "/** @publicapi @module ng1 */ /** */\r\nimport { StateObject, PathNode, ResolveContext, Obj, mapObj, resolvablesBuilder } from '@uirouter/core';\r\nimport * as angular from 'angular';\r\n\r\n/**\r\n * Implementation of the legacy `$resolve` service for angular 1.\r\n */\r\nconst $resolve = {\r\n  /**\r\n   * Asynchronously injects a resolve block.\r\n   *\r\n   * This emulates most of the behavior of the ui-router 0.2.x $resolve.resolve() service API.\r\n   *\r\n   * ### Not bundled by default\r\n   *\r\n   * This API is no longer not part of the standard `@uirouter/angularjs` bundle.\r\n   * For users of the prebuilt bundles, add the `release/resolveService.min.js` UMD bundle.\r\n   * For bundlers (webpack, browserify, etc), add `@uirouter/angularjs/lib/legacy/resolveService`.\r\n   *\r\n   * ---\r\n   *\r\n   * Given an object `invocables`, where keys are strings and values are injectable functions,\r\n   * injects each function, and waits for the resulting promise to resolve.\r\n   * When all resulting promises are resolved, returns the results as an object.\r\n   *\r\n   * #### Example:\r\n   * ```js\r\n   * let invocables = {\r\n   *   foo: [ '$http', ($http) =>\r\n   *            $http.get('/api/foo').then(resp => resp.data) ],\r\n   *   bar: [ 'foo', '$http', (foo, $http) =>\r\n   *            $http.get('/api/bar/' + foo.barId).then(resp => resp.data) ]\r\n   * }\r\n   * $resolve.resolve(invocables)\r\n   *     .then(results => console.log(results.foo, results.bar))\r\n   * // Logs foo and bar:\r\n   * // { id: 123, barId: 456, fooData: 'foo data' }\r\n   * // { id: 456, barData: 'bar data' }\r\n   * ```\r\n   *\r\n   * @param invocables an object which looks like an [[StateDeclaration.resolve]] object; keys are resolve names and values are injectable functions\r\n   * @param locals key/value pre-resolved data (locals)\r\n   * @param parent a promise for a \"parent resolve\"\r\n   */\r\n  resolve: (invocables: { [key: string]: Function }, locals = {}, parent?: Promise<any>) => {\r\n    const parentNode = new PathNode(new StateObject(<any>{ params: {}, resolvables: [] }));\r\n    const node = new PathNode(new StateObject(<any>{ params: {}, resolvables: [] }));\r\n    const context = new ResolveContext([parentNode, node]);\r\n\r\n    context.addResolvables(resolvablesBuilder(<any>{ resolve: invocables }), node.state);\r\n\r\n    const resolveData = (parentLocals: Obj) => {\r\n      const rewrap = (_locals: Obj) => resolvablesBuilder(<any>{ resolve: mapObj(_locals, (local) => () => local) });\r\n      context.addResolvables(rewrap(parentLocals), parentNode.state);\r\n      context.addResolvables(rewrap(locals), node.state);\r\n\r\n      const tuples2ObjR = (acc: Obj, tuple: { token: any; value: any }) => {\r\n        acc[tuple.token] = tuple.value;\r\n        return acc;\r\n      };\r\n      return context.resolvePath().then((results) => results.reduce(tuples2ObjR, {}));\r\n    };\r\n\r\n    return parent ? parent.then(resolveData) : resolveData({});\r\n  },\r\n};\r\n\r\n/** @hidden */\r\nexport const resolveFactory = () => $resolve;\r\n\r\n// The old $resolve service\r\nangular.module('ui.router').factory('$resolve', <any>resolveFactory);\r\n"
  ],
  "names": [
    "PathNode",
    "StateObject",
    "ResolveContext",
    "resolvablesBuilder",
    "mapObj",
    "angular.module"
  ],
  "mappings": ";;;;;;;;;;;;IAAA;IAIA;;;IAGA,IAAM,QAAQ,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAqCf,OAAO,EAAE,UAAC,UAAuC,EAAE,MAAW,EAAE,MAAqB;YAAlC,uBAAA,EAAA,WAAW;YAC5D,IAAM,UAAU,GAAG,IAAIA,aAAQ,CAAC,IAAIC,gBAAW,CAAM,EAAE,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YACvF,IAAM,IAAI,GAAG,IAAID,aAAQ,CAAC,IAAIC,gBAAW,CAAM,EAAE,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YACjF,IAAM,OAAO,GAAG,IAAIC,mBAAc,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;YAEvD,OAAO,CAAC,cAAc,CAACC,uBAAkB,CAAM,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;YAErF,IAAM,WAAW,GAAG,UAAC,YAAiB;gBACpC,IAAM,MAAM,GAAG,UAAC,OAAY,IAAK,OAAAA,uBAAkB,CAAM,EAAE,OAAO,EAAEC,WAAM,CAAC,OAAO,EAAE,UAAC,KAAK,IAAK,OAAA,cAAM,OAAA,KAAK,GAAA,GAAA,CAAC,EAAE,CAAC,GAAA,CAAC;gBAC/G,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC/D,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBAEnD,IAAM,WAAW,GAAG,UAAC,GAAQ,EAAE,KAAiC;oBAC9D,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;oBAC/B,OAAO,GAAG,CAAC;iBACZ,CAAC;gBACF,OAAO,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC,GAAA,CAAC,CAAC;aACjF,CAAC;YAEF,OAAO,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;SAC5D;KACF,CAAC;IAEF;QACa,cAAc,GAAG,cAAM,OAAA,QAAQ,IAAC;IAE7C;AACAC,kBAAc,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAU,EAAO,cAAc,CAAC;;;;;;;;;;;;"
}