{
  "version": 3,
  "file": "stateDirectives.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter\\angularjs\\directives\\stateDirectives.ts"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "/* eslint-disable @typescript-eslint/no-empty-interface */\r\n/* eslint-disable prefer-const */\r\n/**\r\n * # Angular 1 Directives\r\n *\r\n * These are the directives included in UI-Router for Angular 1.\r\n * These directives are used in templates to create viewports and link/navigate to states.\r\n *\r\n * @preferred @publicapi @module directives\r\n */ /** */\r\nimport { ng as angular } from '../angular';\r\nimport { IAugmentedJQuery, ITimeoutService, IScope, IInterpolateService } from 'angular';\r\n\r\nimport {\r\n  Obj,\r\n  extend,\r\n  forEach,\r\n  tail,\r\n  isString,\r\n  isObject,\r\n  isArray,\r\n  parse,\r\n  noop,\r\n  unnestR,\r\n  identity,\r\n  uniqR,\r\n  inArray,\r\n  removeFrom,\r\n  RawParams,\r\n  PathNode,\r\n  StateOrName,\r\n  StateService,\r\n  StateDeclaration,\r\n  UIRouter,\r\n} from '@uirouter/core';\r\nimport { UIViewData } from './viewDirective';\r\n\r\n/** @hidden Used for typedoc */\r\nexport interface ng1_directive {}\r\n\r\n/** @hidden */\r\nfunction parseStateRef(ref: string) {\r\n  const paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/);\r\n  if (paramsOnly) ref = '(' + paramsOnly[1] + ')';\r\n\r\n  const parsed = ref.replace(/\\n/g, ' ').match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\r\n  if (!parsed || parsed.length !== 4) throw new Error(\"Invalid state ref '\" + ref + \"'\");\r\n  return { state: parsed[1] || null, paramExpr: parsed[3] || null };\r\n}\r\n\r\n/** @hidden */\r\nfunction stateContext(el: IAugmentedJQuery) {\r\n  const $uiView: UIViewData = (el.parent() as IAugmentedJQuery).inheritedData('$uiView');\r\n  const path: PathNode[] = parse('$cfg.path')($uiView);\r\n  return path ? tail(path).state.name : undefined;\r\n}\r\n\r\n/** @hidden */\r\nfunction processedDef($state: StateService, $element: IAugmentedJQuery, def: Def): Def {\r\n  const uiState = def.uiState || $state.current.name;\r\n  const uiStateOpts = extend(defaultOpts($element, $state), def.uiStateOpts || {});\r\n  const href = $state.href(uiState, def.uiStateParams, uiStateOpts);\r\n  return { uiState, uiStateParams: def.uiStateParams, uiStateOpts, href };\r\n}\r\n\r\n/** @hidden */\r\ninterface TypeInfo {\r\n  attr: string;\r\n  isAnchor: boolean;\r\n  clickable: boolean;\r\n}\r\n\r\n/** @hidden */\r\nfunction getTypeInfo(el: IAugmentedJQuery): TypeInfo {\r\n  // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\r\n  const isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\r\n  const isForm = el[0].nodeName === 'FORM';\r\n\r\n  return {\r\n    attr: isForm ? 'action' : isSvg ? 'xlink:href' : 'href',\r\n    isAnchor: el.prop('tagName').toUpperCase() === 'A',\r\n    clickable: !isForm,\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nfunction clickHook(\r\n  el: IAugmentedJQuery,\r\n  $state: StateService,\r\n  $timeout: ITimeoutService,\r\n  type: TypeInfo,\r\n  getDef: () => Def\r\n) {\r\n  return function (e: JQueryMouseEventObject) {\r\n    const button = e.which || e.button,\r\n      target = getDef();\r\n\r\n    if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || el.attr('target'))) {\r\n      // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\r\n      const transition = $timeout(function () {\r\n        if (!el.attr('disabled')) {\r\n          $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\r\n        }\r\n      });\r\n      e.preventDefault();\r\n\r\n      // if the state has no URL, ignore one preventDefault from the <a> directive.\r\n      let ignorePreventDefaultCount = type.isAnchor && !target.href ? 1 : 0;\r\n\r\n      e.preventDefault = function () {\r\n        if (ignorePreventDefaultCount-- <= 0) $timeout.cancel(transition);\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nfunction defaultOpts(el: IAugmentedJQuery, $state: StateService) {\r\n  return {\r\n    relative: stateContext(el) || $state.$current,\r\n    inherit: true,\r\n    source: 'sref',\r\n  };\r\n}\r\n\r\n/** @hidden */\r\nfunction bindEvents(element: IAugmentedJQuery, scope: IScope, hookFn: EventListener, uiStateOpts: any): void {\r\n  let events;\r\n\r\n  if (uiStateOpts) {\r\n    events = uiStateOpts.events;\r\n  }\r\n\r\n  if (!isArray(events)) {\r\n    events = ['click'];\r\n  }\r\n\r\n  const on = element.on ? 'on' : 'bind';\r\n  for (const event of events) {\r\n    element[on](event, hookFn);\r\n  }\r\n\r\n  scope.$on('$destroy', function () {\r\n    const off = element.off ? 'off' : 'unbind';\r\n    for (const event of events) {\r\n      element[off](event, hookFn as any);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * `ui-sref`: A directive for linking to a state\r\n *\r\n * A directive which links to a state (and optionally, parameters).\r\n * When clicked, this directive activates the linked state with the supplied parameter values.\r\n *\r\n * ### Linked State\r\n * The attribute value of the `ui-sref` is the name of the state to link to.\r\n *\r\n * #### Example:\r\n * This will activate the `home` state when the link is clicked.\r\n * ```html\r\n * <a ui-sref=\"home\">Home</a>\r\n * ```\r\n *\r\n * ### Relative Links\r\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\r\n * You just need to be aware that the path is relative to the state that *created* the link.\r\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\r\n *\r\n * #### Example:\r\n * Both these links are relative to the parent state, even when a child state is currently active.\r\n * ```html\r\n * <a ui-sref=\".child1\">child 1 state</a>\r\n * <a ui-sref=\".child2\">child 2 state</a>\r\n * ```\r\n *\r\n * This link activates the parent state.\r\n * ```html\r\n * <a ui-sref=\"^\">Return</a>\r\n * ```\r\n *\r\n * ### hrefs\r\n * If the linked state has a URL, the directive will automatically generate and\r\n * update the `href` attribute (using the [[StateService.href]]  method).\r\n *\r\n * #### Example:\r\n * Assuming the `users` state has a url of `/users/`\r\n * ```html\r\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\r\n * ```\r\n *\r\n * ### Parameter Values\r\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\r\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\r\n * The content inside the parentheses is an expression, evaluated to the parameter values.\r\n *\r\n * #### Example:\r\n * This example renders a list of links to users.\r\n * The state's `userId` parameter value comes from each user's `user.id` property.\r\n * ```html\r\n * <li ng-repeat=\"user in users\">\r\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * Note:\r\n * The parameter values expression is `$watch`ed for updates.\r\n *\r\n * ### Transition Options\r\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\r\n * Options are restricted to `location`, `inherit`, and `reload`.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\r\n * ```\r\n *\r\n * ### Other DOM Events\r\n *\r\n * You can also customize which DOM events to respond to (instead of `click`) by\r\n * providing an `events` array in the `ui-sref-opts` attribute.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\r\n * ```\r\n *\r\n * ### Highlighting the active link\r\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\r\n *\r\n * ### Examples\r\n * If you have the following template:\r\n *\r\n * ```html\r\n * <a ui-sref=\"home\">Home</a>\r\n * <a ui-sref=\"about\">About</a>\r\n * <a ui-sref=\"{page: 2}\">Next page</a>\r\n *\r\n * <ul>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\r\n *     </li>\r\n * </ul>\r\n * ```\r\n *\r\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\r\n *\r\n * ```html\r\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\r\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\r\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\r\n *\r\n * <ul>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\r\n *     </li>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\r\n *     </li>\r\n *     <li ng-repeat=\"contact in contacts\">\r\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\r\n *     </li>\r\n * </ul>\r\n *\r\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\r\n * ```\r\n *\r\n * ### Notes\r\n *\r\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\r\n * #### Example:\r\n * Sets the `lang` parameter to `en` and remains on the same state.\r\n *\r\n * ```html\r\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\r\n * ```\r\n *\r\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\r\n *\r\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\r\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\r\n */\r\nlet uiSrefDirective: ng1_directive;\r\nuiSrefDirective = [\r\n  '$uiRouter',\r\n  '$timeout',\r\n  function $StateRefDirective($uiRouter: UIRouter, $timeout: ITimeoutService) {\r\n    const $state = $uiRouter.stateService;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\r\n      link: function (scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\r\n        const type = getTypeInfo(element);\r\n        const active = uiSrefActive[1] || uiSrefActive[0];\r\n        let unlinkInfoFn: Function = null;\r\n\r\n        const rawDef = {} as Def;\r\n        const getDef = () => processedDef($state, element, rawDef);\r\n\r\n        const ref = parseStateRef(attrs.uiSref);\r\n        rawDef.uiState = ref.state;\r\n        rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\r\n\r\n        function update() {\r\n          const def = getDef();\r\n          if (unlinkInfoFn) unlinkInfoFn();\r\n          if (active) unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\r\n          if (def.href != null) attrs.$set(type.attr, def.href);\r\n        }\r\n\r\n        if (ref.paramExpr) {\r\n          scope.$watch(\r\n            ref.paramExpr,\r\n            function (val) {\r\n              rawDef.uiStateParams = extend({}, val);\r\n              update();\r\n            },\r\n            true\r\n          );\r\n          rawDef.uiStateParams = extend({}, scope.$eval(ref.paramExpr));\r\n        }\r\n\r\n        update();\r\n\r\n        scope.$on('$destroy', <any>$uiRouter.stateRegistry.onStatesChanged(update));\r\n        scope.$on('$destroy', <any>$uiRouter.transitionService.onSuccess({}, update));\r\n\r\n        if (!type.clickable) return;\r\n        const hookFn = clickHook(element, $state, $timeout, type, getDef);\r\n        bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\r\n      },\r\n    };\r\n  },\r\n];\r\n\r\n/**\r\n * `ui-state`: A fully dynamic directive for linking to a state\r\n *\r\n * A directive which links to a state (and optionally, parameters).\r\n * When clicked, this directive activates the linked state with the supplied parameter values.\r\n *\r\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\r\n *\r\n * A directive which links to a state (and optionally, parameters).\r\n * When clicked, this directive activates the linked state with the supplied parameter values.\r\n *\r\n * ### Linked State\r\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\r\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\r\n *\r\n * #### Example:\r\n * Create a list of links.\r\n * ```html\r\n * <li ng-repeat=\"link in navlinks\">\r\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Relative Links\r\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\r\n * You just need to be aware that the path is relative to the state that *created* the link.\r\n * This allows a state to create relative `ui-state` which always targets the same destination.\r\n *\r\n * ### hrefs\r\n * If the linked state has a URL, the directive will automatically generate and\r\n * update the `href` attribute (using the [[StateService.href]]  method).\r\n *\r\n * ### Parameter Values\r\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\r\n * Param values should be provided using the `ui-state-params` attribute.\r\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\r\n *\r\n * #### Example:\r\n * This example renders a list of links with param values.\r\n * The state's `userId` parameter value comes from each user's `user.id` property.\r\n * ```html\r\n * <li ng-repeat=\"link in navlinks\">\r\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Transition Options\r\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\r\n * Options are restricted to `location`, `inherit`, and `reload`.\r\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\r\n * ```\r\n *\r\n * ### Other DOM Events\r\n *\r\n * You can also customize which DOM events to respond to (instead of `click`) by\r\n * providing an `events` array in the `ui-state-opts` attribute.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\r\n * ```\r\n *\r\n * ### Highlighting the active link\r\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\r\n *\r\n * ### Notes\r\n *\r\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\r\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\r\n *\r\n * #### Example:\r\n * Sets the `lang` parameter to `en` and remains on the same state.\r\n *\r\n * ```html\r\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\r\n * ```\r\n *\r\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\r\n * ```\r\n */\r\nlet uiStateDirective: ng1_directive;\r\nuiStateDirective = [\r\n  '$uiRouter',\r\n  '$timeout',\r\n  function $StateRefDynamicDirective($uiRouter: UIRouter, $timeout: ITimeoutService) {\r\n    const $state = $uiRouter.stateService;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\r\n      link: function (scope: IScope, element: IAugmentedJQuery, attrs: any, uiSrefActive: any) {\r\n        const type = getTypeInfo(element);\r\n        const active = uiSrefActive[1] || uiSrefActive[0];\r\n        let unlinkInfoFn: Function = null;\r\n        let hookFn;\r\n\r\n        const rawDef = {} as Def;\r\n        const getDef = () => processedDef($state, element, rawDef);\r\n\r\n        const inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\r\n        const watchDeregFns = inputAttrs.reduce((acc, attr) => ((acc[attr] = noop), acc), {});\r\n\r\n        function update() {\r\n          const def = getDef();\r\n          if (unlinkInfoFn) unlinkInfoFn();\r\n          if (active) unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\r\n          if (def.href != null) attrs.$set(type.attr, def.href);\r\n        }\r\n\r\n        inputAttrs.forEach((field) => {\r\n          rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\r\n\r\n          attrs.$observe(field, (expr) => {\r\n            watchDeregFns[field]();\r\n            watchDeregFns[field] = scope.$watch(\r\n              expr,\r\n              (newval) => {\r\n                rawDef[field] = newval;\r\n                update();\r\n              },\r\n              true\r\n            );\r\n          });\r\n        });\r\n\r\n        update();\r\n\r\n        scope.$on('$destroy', <any>$uiRouter.stateRegistry.onStatesChanged(update));\r\n        scope.$on('$destroy', <any>$uiRouter.transitionService.onSuccess({}, update));\r\n\r\n        if (!type.clickable) return;\r\n        hookFn = clickHook(element, $state, $timeout, type, getDef);\r\n        bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\r\n      },\r\n    };\r\n  },\r\n];\r\n\r\n/**\r\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\r\n *\r\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\r\n * related directive's state is active (and remove them when it is inactive).\r\n *\r\n * The primary use-case is to highlight the active link in navigation menus,\r\n * distinguishing it from the inactive menu items.\r\n *\r\n * ### Linking to a `ui-sref` or `ui-state`\r\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\r\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\r\n *\r\n * ### Matching\r\n *\r\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\r\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\r\n *\r\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\r\n * This is an \"exact match\" which uses [[StateService.is]].\r\n *\r\n * ### Parameter values\r\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\r\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\r\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\r\n * </li>\r\n * ```\r\n *\r\n * ### Examples\r\n *\r\n * Given the following template:\r\n * #### Example:\r\n * ```html\r\n * <ul>\r\n *   <li ui-sref-active=\"active\" class=\"item\">\r\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\r\n *   </li>\r\n * </ul>\r\n * ```\r\n *\r\n * When the app state is `app.user` (or any child state),\r\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\r\n * the resulting HTML will appear as (note the 'active' class):\r\n *\r\n * ```html\r\n * <ul>\r\n *   <li ui-sref-active=\"active\" class=\"item active\">\r\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\r\n *   </li>\r\n * </ul>\r\n * ```\r\n *\r\n * ### Glob mode\r\n *\r\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\r\n * The objects keys represent active class names and values represent the respective state names/globs.\r\n * `ui-sref-active` will match if the current active state **includes** any of\r\n * the specified state names/globs, even the abstract ones.\r\n *\r\n * #### Example:\r\n * Given the following template, with \"admin\" being an abstract state:\r\n * ```html\r\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\r\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\r\n * </div>\r\n * ```\r\n *\r\n * Arrays are also supported as values in the `ngClass`-like interface.\r\n * This allows multiple states to add `active` class.\r\n *\r\n * #### Example:\r\n * Given the following template, with \"admin.roles\" being the current state, the class will be added too:\r\n * ```html\r\n * <div ui-sref-active=\"{'active': ['owner.**', 'admin.**']}\">\r\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\r\n * </div>\r\n * ```\r\n *\r\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the `<div>` and `<a>` elements.\r\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\r\n *\r\n * ### Notes:\r\n *\r\n * - The class name is interpolated **once** during the directives link time (any further changes to the\r\n * interpolated value are ignored).\r\n *\r\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\r\n */\r\nlet uiSrefActiveDirective: ng1_directive;\r\nuiSrefActiveDirective = [\r\n  '$state',\r\n  '$stateParams',\r\n  '$interpolate',\r\n  '$uiRouter',\r\n  function $StateRefActiveDirective(\r\n    $state: StateService,\r\n    $stateParams: Obj,\r\n    $interpolate: IInterpolateService,\r\n    $uiRouter: UIRouter\r\n  ) {\r\n    return {\r\n      restrict: 'A',\r\n      controller: [\r\n        '$scope',\r\n        '$element',\r\n        '$attrs',\r\n        function ($scope: IScope, $element: IAugmentedJQuery, $attrs: any) {\r\n          let states: StateData[] = [];\r\n          let activeEqClass: string;\r\n          let uiSrefActive: any;\r\n\r\n          // There probably isn't much point in $observing this\r\n          // uiSrefActive and uiSrefActiveEq share the same directive object with some\r\n          // slight difference in logic routing\r\n          activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\r\n\r\n          try {\r\n            uiSrefActive = $scope.$eval($attrs.uiSrefActive);\r\n          } catch (e) {\r\n            // Do nothing. uiSrefActive is not a valid expression.\r\n            // Fall back to using $interpolate below\r\n          }\r\n          uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\r\n          setStatesFromDefinitionObject(uiSrefActive);\r\n\r\n          // Allow uiSref to communicate with uiSrefActive[Equals]\r\n          this.$$addStateInfo = function (newState: string, newParams: Obj) {\r\n            // we already got an explicit state provided by ui-sref-active, so we\r\n            // shadow the one that comes from ui-sref\r\n            if (isObject(uiSrefActive) && states.length > 0) {\r\n              return;\r\n            }\r\n            const deregister = addState(newState, newParams, uiSrefActive);\r\n            update();\r\n            return deregister;\r\n          };\r\n\r\n          function updateAfterTransition(trans) {\r\n            trans.promise.then(update, noop);\r\n          }\r\n          $scope.$on('$destroy', setupEventListeners());\r\n          if ($uiRouter.globals.transition) {\r\n            updateAfterTransition($uiRouter.globals.transition);\r\n          }\r\n\r\n          function setupEventListeners() {\r\n            const deregisterStatesChangedListener = $uiRouter.stateRegistry.onStatesChanged(handleStatesChanged);\r\n            const deregisterOnStartListener = $uiRouter.transitionService.onStart({}, updateAfterTransition);\r\n            const deregisterStateChangeSuccessListener = $scope.$on('$stateChangeSuccess', update);\r\n            return function cleanUp() {\r\n              deregisterStatesChangedListener();\r\n              deregisterOnStartListener();\r\n              deregisterStateChangeSuccessListener();\r\n            };\r\n          }\r\n\r\n          function handleStatesChanged() {\r\n            setStatesFromDefinitionObject(uiSrefActive);\r\n          }\r\n\r\n          function setStatesFromDefinitionObject(statesDefinition: Obj) {\r\n            if (isObject(statesDefinition)) {\r\n              states = [];\r\n              forEach(statesDefinition, function (stateOrName: StateOrName | Array<StateOrName>, activeClass: string) {\r\n                // Helper function to abstract adding state.\r\n                const addStateForClass = function (stateOrName: string, activeClass: string) {\r\n                  const ref = parseStateRef(stateOrName);\r\n                  addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\r\n                };\r\n\r\n                if (isString(stateOrName)) {\r\n                  // If state is string, just add it.\r\n                  addStateForClass(stateOrName as string, activeClass);\r\n                } else if (isArray(stateOrName)) {\r\n                  // If state is an array, iterate over it and add each array item individually.\r\n                  forEach(stateOrName, function (stateOrName: string) {\r\n                    addStateForClass(stateOrName, activeClass);\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          function addState(stateName: string, stateParams: Obj, activeClass: string) {\r\n            const state = $state.get(stateName, stateContext($element));\r\n\r\n            const stateInfo = {\r\n              state: state || { name: stateName },\r\n              params: stateParams,\r\n              activeClass: activeClass,\r\n            };\r\n\r\n            states.push(stateInfo);\r\n\r\n            return function removeState() {\r\n              removeFrom(states)(stateInfo);\r\n            };\r\n          }\r\n\r\n          // Update route state\r\n          function update() {\r\n            const splitClasses = (str) => str.split(/\\s/).filter(identity);\r\n            const getClasses = (stateList: StateData[]) =>\r\n              stateList\r\n                .map((x) => x.activeClass)\r\n                .map(splitClasses)\r\n                .reduce(unnestR, []);\r\n\r\n            const allClasses = getClasses(states).concat(splitClasses(activeEqClass)).reduce(uniqR, []);\r\n            const fuzzyClasses = getClasses(states.filter((x) => $state.includes(x.state.name, x.params)));\r\n            const exactlyMatchesAny = !!states.filter((x) => $state.is(x.state.name, x.params)).length;\r\n            const exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\r\n\r\n            const addClasses = fuzzyClasses.concat(exactClasses).reduce(uniqR, []);\r\n            const removeClasses = allClasses.filter((cls) => !inArray(addClasses, cls));\r\n\r\n            $scope.$evalAsync(() => {\r\n              addClasses.forEach((className) => $element.addClass(className));\r\n              removeClasses.forEach((className) => $element.removeClass(className));\r\n            });\r\n          }\r\n\r\n          update();\r\n        },\r\n      ],\r\n    };\r\n  },\r\n];\r\n\r\n/** @hidden */\r\ninterface Def {\r\n  uiState: string;\r\n  href: string;\r\n  uiStateParams: Obj;\r\n  uiStateOpts: any;\r\n}\r\n/** @hidden */\r\ninterface StateData {\r\n  state: StateDeclaration;\r\n  params: RawParams;\r\n  activeClass: string;\r\n}\r\n\r\nangular\r\n  .module('ui.router.state')\r\n  .directive('uiSref', uiSrefDirective)\r\n  .directive('uiSrefActive', uiSrefActiveDirective)\r\n  .directive('uiSrefActiveEq', uiSrefActiveDirective)\r\n  .directive('uiState', uiStateDirective);\r\n"
  ]
}